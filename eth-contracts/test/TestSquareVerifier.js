
// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const ZokratesVerifier = artifacts.require('Verifier')
const { proof, inputs } = require('../../zokrates/code/square/proof')

contract('Zokrates Verifier', accounts => {
    let contract
    before('setup contract', async () => {
        console.log("ðŸš€ ~ accounts", accounts.length)
        contract = await ZokratesVerifier.new({from: accounts[0]});
    })
    
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it("Test verification with correct proof", async function() {
        let verification = await contract.verifyTx([proof.a, proof.b, proof.c], inputs)
        console.log("ðŸš€ ~ verification", verification)
        assert.equal(verification, true)
    })
    
    // Test verification with incorrect proof
    it("Test verification with incorrect proof", async function() {
        let didError = false
        try {
            await contract.verifyTx(
                [proof.a.map(address => address.replace('2', '1')), proof.b, proof.c], inputs
            )
        } catch (error) {
            didError = true
            console.log("ðŸš€ ~ didError", didError)
        }
        assert.equal(didError, true) 
    })
})