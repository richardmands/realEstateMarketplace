{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NewSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pausedState",
          "type": "bool"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "HasNewOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNFT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintNFT\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NewSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pausedState\",\"type\":\"bool\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"HasNewOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x797031af88aeb668d8d32e48ce52eebe47783cb581895ce8c021a4d0069d1476\",\"urls\":[\"bzzr://b2337e79cdef92ec2cf71fa1e9d7b1143ecd703f2634088adbd5db9f34b1a4fb\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xa3b7ff86f64c727e49825ffbd97c9b6c0e1d3860194e974a4885f079e9a14f0c\",\"urls\":[\"bzzr://91cca33a3988a625fa8c67cf331330909ac95a56c1d6f6455594304735a8f28d\"]},\"project:/contracts/ZokratesVerifier.sol\":{\"keccak256\":\"0x28b361c7a021651f1bf62be16eb97999870e3826393e4a0bedd354262d67584f\",\"urls\":[\"bzzr://2bfce702a65bb48918624a0a29b9b1d511ff64e3c89c60fd61e3e2517773a562\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600881526020017f43617073746f6e650000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f524d4e00000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162004337603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9d410ac948b4b33520548229283477f4ef024954d67056116e4b39970bde363333604051620000fb919062000405565b60405180910390a1620001156000620001c960201b60201c565b6200012d6301ffc9a760e01b6200026960201b60201c565b620001456380ac58cd60e01b6200026960201b60201c565b6200015d63780e9d6360e01b6200026960201b60201c565b82601090805190602001906200017592919062000334565b5081601190805190602001906200018e92919062000334565b508060129080519060200190620001a792919062000334565b50620001c0635b5e139f60e01b6200026960201b60201c565b505050620004a7565b620001d96200030b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200021357600080fd5b80600060146101000a81548160ff0219169083151502179055507f9422424b175dda897495a07b091ef74a3ef715cf6d866fc972954c1c7f459304816040516200025e919062000422565b60405180910390a150565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200029f57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037757805160ff1916838001178555620003a8565b82800160010185558215620003a8579182015b82811115620003a75782518255916020019190600101906200038a565b5b509050620003b79190620003bb565b5090565b620003e091905b80821115620003dc576000816000905550600101620003c2565b5090565b90565b620003ee816200046b565b82525050565b620003ff816200043f565b82525050565b60006020820190506200041c6000830184620003e3565b92915050565b6000602082019050620004396000830184620003f4565b92915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000478826200047f565b9050919050565b60006200048c8262000493565b9050919050565b6000620004a0826200044b565b9050919050565b613e8080620004b76000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806342842e0e116100c357806395d89b411161007c57806395d89b411461040f578063a22cb4651461042d578063b88d4fde14610449578063c87b56dd14610465578063e985e9c514610495578063f2fde38b146104c557610158565b806342842e0e1461031557806343cd76fc146103315780634f6ccce7146103615780636352211e1461039157806370a08231146103c15780638da5cb5b146103f157610158565b80631fd960da116101155780631fd960da1461023157806323b872dd1461026157806327dc297e1461027d5780632f745c591461029957806338bbfa50146102c957806340c10f19146102e557610158565b806301ffc9a71461015d57806302329a291461018d57806306fdde03146101a9578063081812fc146101c7578063095ea7b3146101f757806318160ddd14610213575b600080fd5b6101776004803603610172919081019061369d565b6104e1565b6040516101849190613ad8565b60405180910390f35b6101a760048036036101a291908101906135a1565b610549565b005b6101b16105de565b6040516101be9190613af3565b60405180910390f35b6101e160048036036101dc919081019061372d565b61067c565b6040516101ee9190613a48565b60405180910390f35b610211600480360361020c9190810190613500565b6106b9565b005b61021b6108bc565b6040516102289190613b77565b60405180910390f35b61024b6004803603610246919081019061353c565b6108c9565b6040516102589190613ad8565b60405180910390f35b61027b600480360361027691908101906133fa565b610a97565b005b610297600480360361029291908101906135ca565b610abc565b005b6102b360048036036102ae9190810190613500565b610aff565b6040516102c09190613b77565b60405180910390f35b6102e360048036036102de919081019061361e565b610b76565b005b6102ff60048036036102fa9190810190613500565b610b7b565b60405161030c9190613ad8565b60405180910390f35b61032f600480360361032a91908101906133fa565b610bdb565b005b61034b600480360361034691908101906136ef565b610bfb565b6040516103589190613ad8565b60405180910390f35b61037b6004803603610376919081019061372d565b610ca6565b6040516103889190613b77565b60405180910390f35b6103ab60048036036103a6919081019061372d565b610cde565b6040516103b89190613a48565b60405180910390f35b6103db60048036036103d69190810190613395565b610d1b565b6040516103e89190613b77565b60405180910390f35b6103f9610d6b565b6040516104069190613a48565b60405180910390f35b610417610d94565b6040516104249190613af3565b60405180910390f35b610447600480360361044291908101906134c4565b610e32565b005b610463600480360361045e9190810190613449565b610f6a565b005b61047f600480360361047a919081019061372d565b610f92565b60405161048c9190613b15565b60405180910390f35b6104af60048036036104aa91908101906133be565b61105b565b6040516104bc9190613ad8565b60405180910390f35b6104df60048036036104da9190810190613395565b6110ef565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610551610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058a57600080fd5b80600060146101000a81548160ff0219169083151502179055507f9422424b175dda897495a07b091ef74a3ef715cf6d866fc972954c1c7f459304816040516105d39190613ad8565b60405180910390a150565b60108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b505050505081565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561072757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107cd57506107cc6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361105b565b5b15156107d857600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b60006108d58383610bfb565b1515610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d90613b57565b60405180910390fd5b60008284600001516000015185600001516020015186602001516000015187602001516020015188604001516000015189604001516020015160405160200161096597969594939291906139c7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610a21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1890613b37565b60405180910390fd5b856015600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a7c86611207565b6000610a888787610b7b565b90508092505050949350505050565b610aa13382611305565b1515610aac57600080fd5b610ab783838361139a565b505050565b610afb828260006040519080825280601f01601f191660200182016040528015610af55781602001600182028038833980820191505090505b50610b76565b5050565b6000610b0a83610d1b565b82101515610b1757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610b6357fe5b9060005260206000200154905092915050565b505050565b6000610b85610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bbe57600080fd5b610bc883836113be565b610bd1826113df565b6001905092915050565b610bf683838360405180602001604052806000815250610f6a565b505050565b600060606002604051908082528060200260200182016040528015610c2f5781602001602082028038833980820191505090505b50905060008090505b6002811015610c7d578381600281101515610c4f57fe5b60200201518282815181101515610c6257fe5b90602001906020020181815250508080600101915050610c38565b506000610c8a82866114cf565b1415610c9a576001915050610ca0565b60009150505b92915050565b6000610cb06108bc565b82101515610cbd57600080fd5b600882815481101515610ccc57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d64600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611657565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e2a5780601f10610dff57610100808354040283529160200191610e2a565b820191906000526020600020905b815481529060010190602001808311610e0d57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e6d57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f5e9190613ad8565b60405180910390a35050565b610f75848484610a97565b610f8184848484611665565b1515610f8c57600080fd5b50505050565b6060610f9d8261177e565b1515610fa857600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104f5780601f106110245761010080835404028352916020019161104f565b820191906000526020600020905b81548152906001019060200180831161103257829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6110f7610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561113057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561116c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9d410ac948b4b33520548229283477f4ef024954d67056116e4b39970bde36336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516111fc9190613a48565b60405180910390a150565b61120f612e61565b604051806040016040528060148054905081526020018373ffffffffffffffffffffffffffffffffffffffff168152509050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f75668a51d8d955cfed0b332555d14bf4fdffc606a9d49484217c917011e25c79336014805490506040516112f9929190613aaf565b60405180910390a15050565b60008061131183610cde565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061138057508373ffffffffffffffffffffffffffffffffffffffff166113688461067c565b73ffffffffffffffffffffffffffffffffffffffff16145b806113915750611390818561105b565b5b91505092915050565b6113a58383836117f0565b6113af83826119b7565b6113b98282611b5b565b505050565b6113c88282611c22565b6113d28282611b5b565b6113db81611d6c565b5050565b6113e88161177e565b15156113f357600080fd5b60606113fe82611db8565b90506114a460128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114995780601f1061146e57610100808354040283529160200191611499565b820191906000526020600020905b81548152906001019060200180831161147c57829003601f168201915b505050505082611ef2565b6013600084815260200190815260200160002090805190602001906114ca929190612e91565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506114fd612f11565b611505611f36565b9050806080015151600186510114151561151e57600080fd5b611526612f59565b6040518060400160405280600081526020016000815250905060008090505b86518110156115ca5783878281518110151561155d57fe5b9060200190602002015110151561157357600080fd5b6115bb826115b685608001516001850181518110151561158f57fe5b906020019060200201518a858151811015156115a757fe5b90602001906020020151612390565b61242a565b91508080600101915050611545565b506115f181836080015160008151811015156115e257fe5b9060200190602002015161242a565b905061163785600001518660200151611609846124e5565b856040015161161b8a604001516124e5565b876060015161162d89600001516124e5565b8960200151612581565b15156116495760019350505050611651565b600093505050505b92915050565b600081600001549050919050565b60006116868473ffffffffffffffffffffffffffffffffffffffff16612705565b15156116955760019050611776565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116d69493929190613a63565b602060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172891908101906136c6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff1661181082610cde565b73ffffffffffffffffffffffffffffffffffffffff1614151561183257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561186e57600080fd5b61187781612750565b6118be600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612810565b611905600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612826565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611a0f6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061284990919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611b02576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611a8057fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611ada57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b549190612f73565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611c2b8161177e565b151515611c3757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c7357600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d0c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612810565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611e00576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611eed565b600082905060005b600082141515611e2e578080600101915050600a82811515611e2657fe5b049150611e08565b6060816040519080825280601f01601f191660200182016040528015611e635781602001600182028038833980820191505090505b50905060006001830390505b600086141515611ee557600a86811515611e8557fe5b0660300160f81b828280600190039350815181101515611ea157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611edd57fe5b049550611e6f565b819450505050505b919050565b6060611f2e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612893565b905092915050565b611f3e612f11565b60405180604001604052807f2973a7b5465cc687bde30a347d8d05d78c6add65d6e8ad956f21cf8cc8d64c9981526020017f0242dbb2eaf5636a62ed520b3184079bbbf2ecad6976175634699d70254bee628152508160000181905250604051806040016040528060405180604001604052807f21700615acafb046a24bd485d299cf1c651f9cd4e7c884ff5aad1c02d4ffa77c81526020017f16fd5bb84581fd2a1fb0923fc476161e96d1dccf598b8f69dbf96ee7b590673f815250815260200160405180604001604052807f07e71da0628e260271436779020d5e8ee80599806dc246625df9057ca348d74781526020017f0add0e03af1b140797548e996adc9d4a00d4380c5192b33dcc5d785e369e9a338152508152508160200181905250604051806040016040528060405180604001604052807f280c942ca7b62a58eb8f755b4ef6af90ef68ef15a03ef2aacd713ff64a5ebc2f81526020017f2f6b9df0bc21a1cd6f5abef24f8aa97bf29fcebd1bd13efd96d701e05ada2db5815250815260200160405180604001604052807f02fba3dfb0d29eebcad16aebf543993b9429b7cb9846b6af6844fc8f5aeeae0081526020017f189a1d791f956280096f07c1e9ded5f3062df7eddb8f27eab4e8897cadbd96128152508152508160400181905250604051806040016040528060405180604001604052807f2a04ac0bceae2ca84adf75dfb0c837f21d05e6fb1e1e3ff7f901200ebdbb3a7081526020017f14afca55ef4603172e69defc9947d1b66d45c8e4b2ffc392b335b911cfdf6b2e815250815260200160405180604001604052807f1c03d874f41279277faf1db33c904744182cb2ec7dc53e87157d62312911dd0e81526020017f246f960fd1a9c72761e7f9cd3a6763fb8fd7040e60725fb6e88a80b73f1ee1a18152508152508160600181905250600360405190808252806020026020018201604052801561222557816020015b612212612f9f565b81526020019060019003908161220a5790505b50816080018190525060405180604001604052807f21d65b04e4adb0c7cae3dc822faf3e59cd64c9111c37027bcb359282dd0ae5d481526020017f0e192bb1fcc8dd71a75e6c8cecabc70fc019a94bb8690ef17c81abd3eeb05c1d8152508160800151600081518110151561229657fe5b9060200190602002018190525060405180604001604052807f2d895e73b30085d91b69f21601dd256c931a46567f3e2e45bbf4dba82273f24281526020017f27f4f1e1d15f38602bd22e684dffcb2a02771efc5805cf73a5f3f62d7599d2c88152508160800151600181518110151561230b57fe5b9060200190602002018190525060405180604001604052807f2745e2dfb8aed85b8aa462cd771a8b48c5030bb880a13d8f283355bd88bd30be81526020017f1d63def59dd3c433abcfbcfacec484f3c6a1a47529b055e661ec91a40e1ed9398152508160800151600281518110151561238057fe5b9060200190602002018190525090565b612398612f59565b6123a0612fb9565b83600001518160006003811015156123b457fe5b60200201818152505083602001518160016003811015156123d157fe5b602002018181525050828160026003811015156123ea57fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461241357612415565bfe5b5080151561242257600080fd5b505092915050565b612432612f59565b61243a612fdb565b836000015181600060048110151561244e57fe5b602002018181525050836020015181600160048110151561246b57fe5b602002018181525050826000015181600260048110151561248857fe5b60200201818152505082602001518160036004811015156124a557fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146124ce576124d0565bfe5b508015156124dd57600080fd5b505092915050565b6124ed612f59565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561252a575060008360200151145b1561254e57604051806040016040528060008152602001600081525091505061257c565b60405180604001604052808460000151815260200182856020015181151561257257fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156125c057816020015b6125ad612f9f565b8152602001906001900390816125a55790505b5090506060600460405190808252806020026020018201604052801561260057816020015b6125ed612ffd565b8152602001906001900390816125e55790505b5090508a82600081518110151561261357fe5b906020019060200201819052508882600181518110151561263057fe5b906020019060200201819052508682600281518110151561264d57fe5b906020019060200201819052508482600381518110151561266a57fe5b906020019060200201819052508981600081518110151561268757fe5b90602001906020020181905250878160018151811015156126a457fe5b90602001906020020181905250858160028151811015156126c157fe5b90602001906020020181905250838160038151811015156126de57fe5b906020019060200201819052506126f58282612b73565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561274757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561280d5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b61283e6001826000015461284990919063ffffffff16565b816000018190555050565b600061288b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e04565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156128ef5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561297a57888181518110151561291d57fe5b90602001015160f81c60f81b838380600101945081518110151561293d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612906565b600090505b87518110156129f357878181518110151561299657fe5b90602001015160f81c60f81b83838060010194508151811015156129b657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061297f565b600090505b8651811015612a6c578681815181101515612a0f57fe5b90602001015160f81c60f81b8383806001019450815181101515612a2f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506129f8565b600090505b8551811015612ae5578581815181101515612a8857fe5b90602001015160f81c60f81b8383806001019450815181101515612aa857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612a71565b600090505b8451811015612b5e578481815181101515612b0157fe5b90602001015160f81c60f81b8383806001019450815181101515612b2157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612aea565b82995050505050505050505095945050505050565b600081518351141515612b8557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612bc45781602001602082028038833980820191505090505b50905060008090505b83811015612da2578681815181101515612be357fe5b90602001906020020151600001518260006006840201815181101515612c0557fe5b90602001906020020181815250508681815181101515612c2157fe5b90602001906020020151602001518260016006840201815181101515612c4357fe5b90602001906020020181815250508581815181101515612c5f57fe5b90602001906020020151600001516001600281101515612c7b57fe5b60200201518260026006840201815181101515612c9457fe5b90602001906020020181815250508581815181101515612cb057fe5b90602001906020020151600001516000600281101515612ccc57fe5b60200201518260036006840201815181101515612ce557fe5b90602001906020020181815250508581815181101515612d0157fe5b90602001906020020151602001516001600281101515612d1d57fe5b60200201518260046006840201815181101515612d3657fe5b90602001906020020181815250508581815181101515612d5257fe5b90602001906020020151602001516000600281101515612d6e57fe5b60200201518260056006840201815181101515612d8757fe5b90602001906020020181815250508080600101915050612bcd565b50612dab613023565b6000602082602086026020860160086107d05a03fa90508060008114612dd057612dd2565bfe5b50801515612ddf57600080fd5b6000826000600181101515612df057fe5b602002015114159550505050505092915050565b60008383111582901515612e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e459190613b15565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ed257805160ff1916838001178555612f00565b82800160010185558215612f00579182015b82811115612eff578251825591602001919060010190612ee4565b5b509050612f0d9190613045565b5090565b604051806101e00160405280612f25612f9f565b8152602001612f32612ffd565b8152602001612f3f612ffd565b8152602001612f4c612ffd565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b815481835581811115612f9a57818360005260206000209182019101612f999190613045565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528061301061306a565b815260200161301d61306a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61306791905b8082111561306357600081600090555060010161304b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b60006130988235613d35565b905092915050565b600082601f83011215156130b357600080fd5b60026130c66130c182613bbf565b613b92565b915081838560208402820111156130dc57600080fd5b60005b8381101561310c57816130f28882613381565b8452602084019350602083019250506001810190506130df565b5050505092915050565b600082601f830112151561312957600080fd5b600261313c61313782613be1565b613b92565b9150818385602084028201111561315257600080fd5b60005b8381101561318257816131688882613381565b845260208401935060208301925050600181019050613155565b5050505092915050565b60006131988235613d47565b905092915050565b60006131ac8235613d53565b905092915050565b60006131c08235613d5d565b905092915050565b60006131d48251613d5d565b905092915050565b600082601f83011215156131ef57600080fd5b81356132026131fd82613c03565b613b92565b9150808252602083016020830185838301111561321e57600080fd5b613229838284613de9565b50505092915050565b600082601f830112151561324557600080fd5b813561325861325382613c2f565b613b92565b9150808252602083016020830185838301111561327457600080fd5b61327f838284613de9565b50505092915050565b60006040828403121561329a57600080fd5b6132a46040613b92565b905060006132b484828501613381565b60008301525060206132c884828501613381565b60208301525092915050565b6000608082840312156132e657600080fd5b6132f06040613b92565b90506000613300848285016130a0565b6000830152506040613314848285016130a0565b60208301525092915050565b6000610100828403121561333357600080fd5b61333d6060613b92565b9050600061334d84828501613288565b6000830152506040613361848285016132d4565b60208301525060c061337584828501613288565b60408301525092915050565b600061338d8235613da9565b905092915050565b6000602082840312156133a757600080fd5b60006133b58482850161308c565b91505092915050565b600080604083850312156133d157600080fd5b60006133df8582860161308c565b92505060206133f08582860161308c565b9150509250929050565b60008060006060848603121561340f57600080fd5b600061341d8682870161308c565b935050602061342e8682870161308c565b925050604061343f86828701613381565b9150509250925092565b6000806000806080858703121561345f57600080fd5b600061346d8782880161308c565b945050602061347e8782880161308c565b935050604061348f87828801613381565b925050606085013567ffffffffffffffff8111156134ac57600080fd5b6134b8878288016131dc565b91505092959194509250565b600080604083850312156134d757600080fd5b60006134e58582860161308c565b92505060206134f68582860161318c565b9150509250929050565b6000806040838503121561351357600080fd5b60006135218582860161308c565b925050602061353285828601613381565b9150509250929050565b600080600080610180858703121561355357600080fd5b60006135618782880161308c565b945050602061357287828801613381565b935050604061358387828801613320565b92505061014061359587828801613116565b91505092959194509250565b6000602082840312156135b357600080fd5b60006135c18482850161318c565b91505092915050565b600080604083850312156135dd57600080fd5b60006135eb858286016131a0565b925050602083013567ffffffffffffffff81111561360857600080fd5b61361485828601613232565b9150509250929050565b60008060006060848603121561363357600080fd5b6000613641868287016131a0565b935050602084013567ffffffffffffffff81111561365e57600080fd5b61366a86828701613232565b925050604084013567ffffffffffffffff81111561368757600080fd5b613693868287016131dc565b9150509250925092565b6000602082840312156136af57600080fd5b60006136bd848285016131b4565b91505092915050565b6000602082840312156136d857600080fd5b60006136e6848285016131c8565b91505092915050565b600080610140838503121561370357600080fd5b600061371185828601613320565b92505061010061372385828601613116565b9150509250929050565b60006020828403121561373f57600080fd5b600061374d84828501613381565b91505092915050565b600061376283836139a1565b60208301905092915050565b61377781613db3565b82525050565b61378681613ced565b82525050565b61379581613c7a565b61379f8184613cc0565b92506137aa82613c65565b60005b828110156137d8576137c0858351613756565b94506137cb82613cb3565b91506001810190506137ad565b5050505050565b6137e881613c6f565b6137f28184613cc0565b92506137fd82613c5b565b60005b8281101561382b57613813858351613756565b945061381e82613ca6565b9150600181019050613800565b5050505050565b61383b81613cff565b82525050565b600061384c82613c85565b6138568185613ccb565b9350613866818560208601613df8565b61386f81613e35565b840191505092915050565b600061388582613c9b565b61388f8185613cdc565b935061389f818560208601613df8565b6138a881613e35565b840191505092915050565b60006138be82613c90565b6138c88185613cdc565b93506138d8818560208601613df8565b6138e181613e35565b840191505092915050565b60006138f9601c83613cdc565b91507f536f7272792c206e6f74206120756e6971756520736f6c7574696f6e000000006000830152602082019050919050565b6000613939602e83613cdc565b91507f536f7272792c20796f75206e65656420746f2070726f766964652070726f6f6660008301527f206f66206f776e6572736869702e0000000000000000000000000000000000006020830152604082019050919050565b61399b81613d2b565b82525050565b6139aa81613d2b565b82525050565b6139c16139bc82613d2b565b613e2b565b82525050565b60006139d3828a61378c565b6040820191506139e382896139b0565b6020820191506139f382886139b0565b602082019150613a0382876137df565b604082019150613a1382866137df565b604082019150613a2382856139b0565b602082019150613a3382846139b0565b60208201915081905098975050505050505050565b6000602082019050613a5d600083018461377d565b92915050565b6000608082019050613a78600083018761376e565b613a85602083018661377d565b613a926040830185613992565b8181036060830152613aa48184613841565b905095945050505050565b6000604082019050613ac4600083018561376e565b613ad16020830184613992565b9392505050565b6000602082019050613aed6000830184613832565b92915050565b60006020820190508181036000830152613b0d81846138b3565b905092915050565b60006020820190508181036000830152613b2f818461387a565b905092915050565b60006020820190508181036000830152613b50816138ec565b9050919050565b60006020820190508181036000830152613b708161392c565b9050919050565b6000602082019050613b8c6000830184613992565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613bb557600080fd5b8060405250919050565b600067ffffffffffffffff821115613bd657600080fd5b602082029050919050565b600067ffffffffffffffff821115613bf857600080fd5b602082029050919050565b600067ffffffffffffffff821115613c1a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613c4657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613cf882613d0b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613d4082613d89565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613dbe82613dc5565b9050919050565b6000613dd082613dd7565b9050919050565b6000613de282613d0b565b9050919050565b82818337600083830152505050565b60005b83811015613e16578082015181840152602081019050613dfb565b83811115613e25576000848401525b50505050565b6000819050919050565b6000601f19601f830116905091905056fea265627a7a72305820a2a327300103f2d9e4c1b3b041e886bd512116bbaa509a8320888ee21d0e16216c6578706572696d656e74616cf5003768747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806342842e0e116100c357806395d89b411161007c57806395d89b411461040f578063a22cb4651461042d578063b88d4fde14610449578063c87b56dd14610465578063e985e9c514610495578063f2fde38b146104c557610158565b806342842e0e1461031557806343cd76fc146103315780634f6ccce7146103615780636352211e1461039157806370a08231146103c15780638da5cb5b146103f157610158565b80631fd960da116101155780631fd960da1461023157806323b872dd1461026157806327dc297e1461027d5780632f745c591461029957806338bbfa50146102c957806340c10f19146102e557610158565b806301ffc9a71461015d57806302329a291461018d57806306fdde03146101a9578063081812fc146101c7578063095ea7b3146101f757806318160ddd14610213575b600080fd5b6101776004803603610172919081019061369d565b6104e1565b6040516101849190613ad8565b60405180910390f35b6101a760048036036101a291908101906135a1565b610549565b005b6101b16105de565b6040516101be9190613af3565b60405180910390f35b6101e160048036036101dc919081019061372d565b61067c565b6040516101ee9190613a48565b60405180910390f35b610211600480360361020c9190810190613500565b6106b9565b005b61021b6108bc565b6040516102289190613b77565b60405180910390f35b61024b6004803603610246919081019061353c565b6108c9565b6040516102589190613ad8565b60405180910390f35b61027b600480360361027691908101906133fa565b610a97565b005b610297600480360361029291908101906135ca565b610abc565b005b6102b360048036036102ae9190810190613500565b610aff565b6040516102c09190613b77565b60405180910390f35b6102e360048036036102de919081019061361e565b610b76565b005b6102ff60048036036102fa9190810190613500565b610b7b565b60405161030c9190613ad8565b60405180910390f35b61032f600480360361032a91908101906133fa565b610bdb565b005b61034b600480360361034691908101906136ef565b610bfb565b6040516103589190613ad8565b60405180910390f35b61037b6004803603610376919081019061372d565b610ca6565b6040516103889190613b77565b60405180910390f35b6103ab60048036036103a6919081019061372d565b610cde565b6040516103b89190613a48565b60405180910390f35b6103db60048036036103d69190810190613395565b610d1b565b6040516103e89190613b77565b60405180910390f35b6103f9610d6b565b6040516104069190613a48565b60405180910390f35b610417610d94565b6040516104249190613af3565b60405180910390f35b610447600480360361044291908101906134c4565b610e32565b005b610463600480360361045e9190810190613449565b610f6a565b005b61047f600480360361047a919081019061372d565b610f92565b60405161048c9190613b15565b60405180910390f35b6104af60048036036104aa91908101906133be565b61105b565b6040516104bc9190613ad8565b60405180910390f35b6104df60048036036104da9190810190613395565b6110ef565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610551610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058a57600080fd5b80600060146101000a81548160ff0219169083151502179055507f9422424b175dda897495a07b091ef74a3ef715cf6d866fc972954c1c7f459304816040516105d39190613ad8565b60405180910390a150565b60108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b505050505081565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561072757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107cd57506107cc6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361105b565b5b15156107d857600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b60006108d58383610bfb565b1515610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d90613b57565b60405180910390fd5b60008284600001516000015185600001516020015186602001516000015187602001516020015188604001516000015189604001516020015160405160200161096597969594939291906139c7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610a21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1890613b37565b60405180910390fd5b856015600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a7c86611207565b6000610a888787610b7b565b90508092505050949350505050565b610aa13382611305565b1515610aac57600080fd5b610ab783838361139a565b505050565b610afb828260006040519080825280601f01601f191660200182016040528015610af55781602001600182028038833980820191505090505b50610b76565b5050565b6000610b0a83610d1b565b82101515610b1757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610b6357fe5b9060005260206000200154905092915050565b505050565b6000610b85610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bbe57600080fd5b610bc883836113be565b610bd1826113df565b6001905092915050565b610bf683838360405180602001604052806000815250610f6a565b505050565b600060606002604051908082528060200260200182016040528015610c2f5781602001602082028038833980820191505090505b50905060008090505b6002811015610c7d578381600281101515610c4f57fe5b60200201518282815181101515610c6257fe5b90602001906020020181815250508080600101915050610c38565b506000610c8a82866114cf565b1415610c9a576001915050610ca0565b60009150505b92915050565b6000610cb06108bc565b82101515610cbd57600080fd5b600882815481101515610ccc57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d64600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611657565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e2a5780601f10610dff57610100808354040283529160200191610e2a565b820191906000526020600020905b815481529060010190602001808311610e0d57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e6d57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f5e9190613ad8565b60405180910390a35050565b610f75848484610a97565b610f8184848484611665565b1515610f8c57600080fd5b50505050565b6060610f9d8261177e565b1515610fa857600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104f5780601f106110245761010080835404028352916020019161104f565b820191906000526020600020905b81548152906001019060200180831161103257829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6110f7610d6b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561113057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561116c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9d410ac948b4b33520548229283477f4ef024954d67056116e4b39970bde36336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516111fc9190613a48565b60405180910390a150565b61120f612e61565b604051806040016040528060148054905081526020018373ffffffffffffffffffffffffffffffffffffffff168152509050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f75668a51d8d955cfed0b332555d14bf4fdffc606a9d49484217c917011e25c79336014805490506040516112f9929190613aaf565b60405180910390a15050565b60008061131183610cde565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061138057508373ffffffffffffffffffffffffffffffffffffffff166113688461067c565b73ffffffffffffffffffffffffffffffffffffffff16145b806113915750611390818561105b565b5b91505092915050565b6113a58383836117f0565b6113af83826119b7565b6113b98282611b5b565b505050565b6113c88282611c22565b6113d28282611b5b565b6113db81611d6c565b5050565b6113e88161177e565b15156113f357600080fd5b60606113fe82611db8565b90506114a460128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114995780601f1061146e57610100808354040283529160200191611499565b820191906000526020600020905b81548152906001019060200180831161147c57829003601f168201915b505050505082611ef2565b6013600084815260200190815260200160002090805190602001906114ca929190612e91565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506114fd612f11565b611505611f36565b9050806080015151600186510114151561151e57600080fd5b611526612f59565b6040518060400160405280600081526020016000815250905060008090505b86518110156115ca5783878281518110151561155d57fe5b9060200190602002015110151561157357600080fd5b6115bb826115b685608001516001850181518110151561158f57fe5b906020019060200201518a858151811015156115a757fe5b90602001906020020151612390565b61242a565b91508080600101915050611545565b506115f181836080015160008151811015156115e257fe5b9060200190602002015161242a565b905061163785600001518660200151611609846124e5565b856040015161161b8a604001516124e5565b876060015161162d89600001516124e5565b8960200151612581565b15156116495760019350505050611651565b600093505050505b92915050565b600081600001549050919050565b60006116868473ffffffffffffffffffffffffffffffffffffffff16612705565b15156116955760019050611776565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116d69493929190613a63565b602060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172891908101906136c6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff1661181082610cde565b73ffffffffffffffffffffffffffffffffffffffff1614151561183257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561186e57600080fd5b61187781612750565b6118be600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612810565b611905600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612826565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611a0f6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061284990919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611b02576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611a8057fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611ada57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b549190612f73565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611c2b8161177e565b151515611c3757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c7357600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d0c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612810565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611e00576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611eed565b600082905060005b600082141515611e2e578080600101915050600a82811515611e2657fe5b049150611e08565b6060816040519080825280601f01601f191660200182016040528015611e635781602001600182028038833980820191505090505b50905060006001830390505b600086141515611ee557600a86811515611e8557fe5b0660300160f81b828280600190039350815181101515611ea157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611edd57fe5b049550611e6f565b819450505050505b919050565b6060611f2e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612893565b905092915050565b611f3e612f11565b60405180604001604052807f2973a7b5465cc687bde30a347d8d05d78c6add65d6e8ad956f21cf8cc8d64c9981526020017f0242dbb2eaf5636a62ed520b3184079bbbf2ecad6976175634699d70254bee628152508160000181905250604051806040016040528060405180604001604052807f21700615acafb046a24bd485d299cf1c651f9cd4e7c884ff5aad1c02d4ffa77c81526020017f16fd5bb84581fd2a1fb0923fc476161e96d1dccf598b8f69dbf96ee7b590673f815250815260200160405180604001604052807f07e71da0628e260271436779020d5e8ee80599806dc246625df9057ca348d74781526020017f0add0e03af1b140797548e996adc9d4a00d4380c5192b33dcc5d785e369e9a338152508152508160200181905250604051806040016040528060405180604001604052807f280c942ca7b62a58eb8f755b4ef6af90ef68ef15a03ef2aacd713ff64a5ebc2f81526020017f2f6b9df0bc21a1cd6f5abef24f8aa97bf29fcebd1bd13efd96d701e05ada2db5815250815260200160405180604001604052807f02fba3dfb0d29eebcad16aebf543993b9429b7cb9846b6af6844fc8f5aeeae0081526020017f189a1d791f956280096f07c1e9ded5f3062df7eddb8f27eab4e8897cadbd96128152508152508160400181905250604051806040016040528060405180604001604052807f2a04ac0bceae2ca84adf75dfb0c837f21d05e6fb1e1e3ff7f901200ebdbb3a7081526020017f14afca55ef4603172e69defc9947d1b66d45c8e4b2ffc392b335b911cfdf6b2e815250815260200160405180604001604052807f1c03d874f41279277faf1db33c904744182cb2ec7dc53e87157d62312911dd0e81526020017f246f960fd1a9c72761e7f9cd3a6763fb8fd7040e60725fb6e88a80b73f1ee1a18152508152508160600181905250600360405190808252806020026020018201604052801561222557816020015b612212612f9f565b81526020019060019003908161220a5790505b50816080018190525060405180604001604052807f21d65b04e4adb0c7cae3dc822faf3e59cd64c9111c37027bcb359282dd0ae5d481526020017f0e192bb1fcc8dd71a75e6c8cecabc70fc019a94bb8690ef17c81abd3eeb05c1d8152508160800151600081518110151561229657fe5b9060200190602002018190525060405180604001604052807f2d895e73b30085d91b69f21601dd256c931a46567f3e2e45bbf4dba82273f24281526020017f27f4f1e1d15f38602bd22e684dffcb2a02771efc5805cf73a5f3f62d7599d2c88152508160800151600181518110151561230b57fe5b9060200190602002018190525060405180604001604052807f2745e2dfb8aed85b8aa462cd771a8b48c5030bb880a13d8f283355bd88bd30be81526020017f1d63def59dd3c433abcfbcfacec484f3c6a1a47529b055e661ec91a40e1ed9398152508160800151600281518110151561238057fe5b9060200190602002018190525090565b612398612f59565b6123a0612fb9565b83600001518160006003811015156123b457fe5b60200201818152505083602001518160016003811015156123d157fe5b602002018181525050828160026003811015156123ea57fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461241357612415565bfe5b5080151561242257600080fd5b505092915050565b612432612f59565b61243a612fdb565b836000015181600060048110151561244e57fe5b602002018181525050836020015181600160048110151561246b57fe5b602002018181525050826000015181600260048110151561248857fe5b60200201818152505082602001518160036004811015156124a557fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146124ce576124d0565bfe5b508015156124dd57600080fd5b505092915050565b6124ed612f59565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561252a575060008360200151145b1561254e57604051806040016040528060008152602001600081525091505061257c565b60405180604001604052808460000151815260200182856020015181151561257257fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156125c057816020015b6125ad612f9f565b8152602001906001900390816125a55790505b5090506060600460405190808252806020026020018201604052801561260057816020015b6125ed612ffd565b8152602001906001900390816125e55790505b5090508a82600081518110151561261357fe5b906020019060200201819052508882600181518110151561263057fe5b906020019060200201819052508682600281518110151561264d57fe5b906020019060200201819052508482600381518110151561266a57fe5b906020019060200201819052508981600081518110151561268757fe5b90602001906020020181905250878160018151811015156126a457fe5b90602001906020020181905250858160028151811015156126c157fe5b90602001906020020181905250838160038151811015156126de57fe5b906020019060200201819052506126f58282612b73565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561274757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561280d5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b61283e6001826000015461284990919063ffffffff16565b816000018190555050565b600061288b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e04565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156128ef5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561297a57888181518110151561291d57fe5b90602001015160f81c60f81b838380600101945081518110151561293d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612906565b600090505b87518110156129f357878181518110151561299657fe5b90602001015160f81c60f81b83838060010194508151811015156129b657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061297f565b600090505b8651811015612a6c578681815181101515612a0f57fe5b90602001015160f81c60f81b8383806001019450815181101515612a2f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506129f8565b600090505b8551811015612ae5578581815181101515612a8857fe5b90602001015160f81c60f81b8383806001019450815181101515612aa857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612a71565b600090505b8451811015612b5e578481815181101515612b0157fe5b90602001015160f81c60f81b8383806001019450815181101515612b2157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612aea565b82995050505050505050505095945050505050565b600081518351141515612b8557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612bc45781602001602082028038833980820191505090505b50905060008090505b83811015612da2578681815181101515612be357fe5b90602001906020020151600001518260006006840201815181101515612c0557fe5b90602001906020020181815250508681815181101515612c2157fe5b90602001906020020151602001518260016006840201815181101515612c4357fe5b90602001906020020181815250508581815181101515612c5f57fe5b90602001906020020151600001516001600281101515612c7b57fe5b60200201518260026006840201815181101515612c9457fe5b90602001906020020181815250508581815181101515612cb057fe5b90602001906020020151600001516000600281101515612ccc57fe5b60200201518260036006840201815181101515612ce557fe5b90602001906020020181815250508581815181101515612d0157fe5b90602001906020020151602001516001600281101515612d1d57fe5b60200201518260046006840201815181101515612d3657fe5b90602001906020020181815250508581815181101515612d5257fe5b90602001906020020151602001516000600281101515612d6e57fe5b60200201518260056006840201815181101515612d8757fe5b90602001906020020181815250508080600101915050612bcd565b50612dab613023565b6000602082602086026020860160086107d05a03fa90508060008114612dd057612dd2565bfe5b50801515612ddf57600080fd5b6000826000600181101515612df057fe5b602002015114159550505050505092915050565b60008383111582901515612e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e459190613b15565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ed257805160ff1916838001178555612f00565b82800160010185558215612f00579182015b82811115612eff578251825591602001919060010190612ee4565b5b509050612f0d9190613045565b5090565b604051806101e00160405280612f25612f9f565b8152602001612f32612ffd565b8152602001612f3f612ffd565b8152602001612f4c612ffd565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b815481835581811115612f9a57818360005260206000209182019101612f999190613045565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528061301061306a565b815260200161301d61306a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61306791905b8082111561306357600081600090555060010161304b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b60006130988235613d35565b905092915050565b600082601f83011215156130b357600080fd5b60026130c66130c182613bbf565b613b92565b915081838560208402820111156130dc57600080fd5b60005b8381101561310c57816130f28882613381565b8452602084019350602083019250506001810190506130df565b5050505092915050565b600082601f830112151561312957600080fd5b600261313c61313782613be1565b613b92565b9150818385602084028201111561315257600080fd5b60005b8381101561318257816131688882613381565b845260208401935060208301925050600181019050613155565b5050505092915050565b60006131988235613d47565b905092915050565b60006131ac8235613d53565b905092915050565b60006131c08235613d5d565b905092915050565b60006131d48251613d5d565b905092915050565b600082601f83011215156131ef57600080fd5b81356132026131fd82613c03565b613b92565b9150808252602083016020830185838301111561321e57600080fd5b613229838284613de9565b50505092915050565b600082601f830112151561324557600080fd5b813561325861325382613c2f565b613b92565b9150808252602083016020830185838301111561327457600080fd5b61327f838284613de9565b50505092915050565b60006040828403121561329a57600080fd5b6132a46040613b92565b905060006132b484828501613381565b60008301525060206132c884828501613381565b60208301525092915050565b6000608082840312156132e657600080fd5b6132f06040613b92565b90506000613300848285016130a0565b6000830152506040613314848285016130a0565b60208301525092915050565b6000610100828403121561333357600080fd5b61333d6060613b92565b9050600061334d84828501613288565b6000830152506040613361848285016132d4565b60208301525060c061337584828501613288565b60408301525092915050565b600061338d8235613da9565b905092915050565b6000602082840312156133a757600080fd5b60006133b58482850161308c565b91505092915050565b600080604083850312156133d157600080fd5b60006133df8582860161308c565b92505060206133f08582860161308c565b9150509250929050565b60008060006060848603121561340f57600080fd5b600061341d8682870161308c565b935050602061342e8682870161308c565b925050604061343f86828701613381565b9150509250925092565b6000806000806080858703121561345f57600080fd5b600061346d8782880161308c565b945050602061347e8782880161308c565b935050604061348f87828801613381565b925050606085013567ffffffffffffffff8111156134ac57600080fd5b6134b8878288016131dc565b91505092959194509250565b600080604083850312156134d757600080fd5b60006134e58582860161308c565b92505060206134f68582860161318c565b9150509250929050565b6000806040838503121561351357600080fd5b60006135218582860161308c565b925050602061353285828601613381565b9150509250929050565b600080600080610180858703121561355357600080fd5b60006135618782880161308c565b945050602061357287828801613381565b935050604061358387828801613320565b92505061014061359587828801613116565b91505092959194509250565b6000602082840312156135b357600080fd5b60006135c18482850161318c565b91505092915050565b600080604083850312156135dd57600080fd5b60006135eb858286016131a0565b925050602083013567ffffffffffffffff81111561360857600080fd5b61361485828601613232565b9150509250929050565b60008060006060848603121561363357600080fd5b6000613641868287016131a0565b935050602084013567ffffffffffffffff81111561365e57600080fd5b61366a86828701613232565b925050604084013567ffffffffffffffff81111561368757600080fd5b613693868287016131dc565b9150509250925092565b6000602082840312156136af57600080fd5b60006136bd848285016131b4565b91505092915050565b6000602082840312156136d857600080fd5b60006136e6848285016131c8565b91505092915050565b600080610140838503121561370357600080fd5b600061371185828601613320565b92505061010061372385828601613116565b9150509250929050565b60006020828403121561373f57600080fd5b600061374d84828501613381565b91505092915050565b600061376283836139a1565b60208301905092915050565b61377781613db3565b82525050565b61378681613ced565b82525050565b61379581613c7a565b61379f8184613cc0565b92506137aa82613c65565b60005b828110156137d8576137c0858351613756565b94506137cb82613cb3565b91506001810190506137ad565b5050505050565b6137e881613c6f565b6137f28184613cc0565b92506137fd82613c5b565b60005b8281101561382b57613813858351613756565b945061381e82613ca6565b9150600181019050613800565b5050505050565b61383b81613cff565b82525050565b600061384c82613c85565b6138568185613ccb565b9350613866818560208601613df8565b61386f81613e35565b840191505092915050565b600061388582613c9b565b61388f8185613cdc565b935061389f818560208601613df8565b6138a881613e35565b840191505092915050565b60006138be82613c90565b6138c88185613cdc565b93506138d8818560208601613df8565b6138e181613e35565b840191505092915050565b60006138f9601c83613cdc565b91507f536f7272792c206e6f74206120756e6971756520736f6c7574696f6e000000006000830152602082019050919050565b6000613939602e83613cdc565b91507f536f7272792c20796f75206e65656420746f2070726f766964652070726f6f6660008301527f206f66206f776e6572736869702e0000000000000000000000000000000000006020830152604082019050919050565b61399b81613d2b565b82525050565b6139aa81613d2b565b82525050565b6139c16139bc82613d2b565b613e2b565b82525050565b60006139d3828a61378c565b6040820191506139e382896139b0565b6020820191506139f382886139b0565b602082019150613a0382876137df565b604082019150613a1382866137df565b604082019150613a2382856139b0565b602082019150613a3382846139b0565b60208201915081905098975050505050505050565b6000602082019050613a5d600083018461377d565b92915050565b6000608082019050613a78600083018761376e565b613a85602083018661377d565b613a926040830185613992565b8181036060830152613aa48184613841565b905095945050505050565b6000604082019050613ac4600083018561376e565b613ad16020830184613992565b9392505050565b6000602082019050613aed6000830184613832565b92915050565b60006020820190508181036000830152613b0d81846138b3565b905092915050565b60006020820190508181036000830152613b2f818461387a565b905092915050565b60006020820190508181036000830152613b50816138ec565b9050919050565b60006020820190508181036000830152613b708161392c565b9050919050565b6000602082019050613b8c6000830184613992565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613bb557600080fd5b8060405250919050565b600067ffffffffffffffff821115613bd657600080fd5b602082029050919050565b600067ffffffffffffffff821115613bf857600080fd5b602082029050919050565b600067ffffffffffffffff821115613c1a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613c4657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613cf882613d0b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613d4082613d89565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613dbe82613dc5565b9050919050565b6000613dd082613dd7565b9050919050565b6000613de282613d0b565b9050919050565b82818337600083830152505050565b60005b83811015613e16578082015181840152602081019050613dfb565b83811115613e25576000848401525b50505050565b6000819050919050565b6000601f19601f830116905091905056fea265627a7a72305820a2a327300103f2d9e4c1b3b041e886bd512116bbaa509a8320888ee21d0e16216c6578706572696d656e74616cf50037",
  "sourceMap": "334:1720:6:-;;;19674:286:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:10;672:6;;:19;;;;;;;;;;;;;;;;;;706:23;718:10;706:23;;;;;;;;;;;;;;;1962:12;1968:5;1962;;;:12;;:::i;:::-;2841:40;2438:10;2860:20;;2841:18;;;:40;;:::i;:::-;4987;4861:10;5006:20;;4987:18;;;:40;;:::i;:::-;12360:51;11966:10;12379:31;;12360:18;;;:51;;:::i;:::-;19824:5;19817:4;:12;;;;;;;;;;;;:::i;:::-;;19848:7;19839:6;:16;;;;;;;;;;;;:::i;:::-;;19881:12;19865:13;:28;;;;;;;;;;;;:::i;:::-;;19904:49;19485:10;19923:29;;19904:18;;;:49;;:::i;:::-;19674:286;;;334:1720:6;;1719:119:4;900:7;:5;;;:7;;:::i;:::-;886:21;;:10;:21;;;878:30;;;;;;;;1789:10;1779:7;;:20;;;;;;;;;;;;;;;;;;1814:17;1820:10;1814:17;;;;;;;;;;;;;;;1719:119;:::o;3191:158::-;3281:10;3266:25;;:11;:25;;;;;3258:34;;;;;;;;3338:4;3302:20;:33;3323:11;3302:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3191:158;:::o;459:77::-;497:7;523:6;;;;;;;;;;;516:13;;459:77;:::o;334:1720:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:142:-1:-;96:45;135:5;96:45;;;91:3;84:58;78:69;;;154:111;231:28;253:5;231:28;;;226:3;219:41;213:52;;;272:229;;398:2;387:9;383:18;375:26;;412:79;488:1;477:9;473:17;464:6;412:79;;;369:132;;;;;508:201;;620:2;609:9;605:18;597:26;;634:65;696:1;685:9;681:17;672:6;634:65;;;591:118;;;;;716:92;;796:5;789:13;782:21;771:32;;765:43;;;;815:128;;895:42;888:5;884:54;873:65;;867:76;;;;950:129;;1037:37;1068:5;1037:37;;;1024:50;;1018:61;;;;1086:121;;1165:37;1196:5;1165:37;;;1152:50;;1146:61;;;;1214:115;;1293:31;1318:5;1293:31;;;1280:44;;1274:55;;;;334:1720:6;;;;;;;",
  "deployedSourceMap": "334:1720:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:1720:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1719:119;;;;;;;;;;;;;;;;:::i;:::-;;19211:18;;;:::i;:::-;;;;;;;;;;;;;;;;6162:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5566:590;;;;;;;;;;;;;;;;:::i;:::-;;13125:94;;;:::i;:::-;;;;;;;;;;;;;;;;1368:684:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7306:180:4;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;12791:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;21547:312:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7492:132;;;;;;;;;;;;;;;;:::i;:::-;;24047:400:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13556:148:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5331:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5040:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;459:77;;;:::i;:::-;;;;;;;;;;;;;;;;19235:20;;;:::i;:::-;;;;;;;;;;;;;;;;6621:213;;;;;;;;;;;;;;;;:::i;:::-;;7630:211;;;;;;;;;;;;;;;;:::i;:::-;;20047:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7155:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;983:318;;;;;;;;;;;;;;;;:::i;:::-;;2979:133;3049:4;3072:20;:33;3093:11;3072:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3065:40;;2979:133;;;:::o;1719:119::-;900:7;:5;:7::i;:::-;886:21;;:10;:21;;;878:30;;;;;;;;1789:10;1779:7;;:20;;;;;;;;;;;;;;;;;;1814:17;1820:10;1814:17;;;;;;;;;;;;;;;1719:119;:::o;19211:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6162:167::-;6221:7;6298:15;:24;6314:7;6298:24;;;;;;;;;;;;;;;;;;;;;6291:31;;6162:167;;;:::o;5566:590::-;5747:2;5723:26;;:11;:20;5735:7;5723:20;;;;;;;;;;;;;;;;;;;;;:26;;;;5715:35;;;;;;;;5897:10;5873:34;;:11;:20;5885:7;5873:20;;;;;;;;;;;;;;;;;;;;;:34;;;:88;;;;5911:50;5928:11;:20;5940:7;5928:20;;;;;;;;;;;;;;;;;;;;;5950:10;5911:16;:50::i;:::-;5873:88;5865:97;;;;;;;;6052:2;6025:15;:24;6041:7;6025:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6141:7;6137:2;6106:43;;6115:11;:20;6127:7;6115:20;;;;;;;;;;;;;;;;;;;;;6106:43;;;;;;;;;;;;5566:590;;:::o;13125:94::-;13169:7;13195:10;:17;;;;13188:24;;13125:94;:::o;1368:684:6:-;1468:4;1493:22;1502:5;1509;1493:8;:22::i;:::-;1485:81;;;;;;;;;;;;;;;;;;;;;;;;1672:20;1722:5;1729;:7;;;:9;;;1740:5;:7;;;:9;;;1751:5;:7;;;:9;;;1762:5;:7;;;:9;;;1773:5;:7;;;:9;;;1784:5;:7;;;:9;;;1705:89;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1705:89:6;;;1695:100;;;;;;1672:123;;1863:1;1822:43;;:15;:29;1838:12;1822:29;;;;;;;;;;;;;;;;;;;;;:43;;;1814:84;;;;;;;;;;;;;;;;;;;;;;;;1940:5;1908:15;:29;1924:12;1908:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1956:18;1968:5;1956:11;:18::i;:::-;1992:11;2006:15;2011:5;2018:2;2006:4;:15::i;:::-;1992:29;;2039:6;2032:13;;;;1368:684;;;;;;:::o;7306:180:4:-;7396:39;7415:10;7427:7;7396:18;:39::i;:::-;7388:48;;;;;;;;7447:32;7461:4;7467:2;7471:7;7447:13;:32::i;:::-;7306:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;12791:182:4:-;12871:7;12906:16;12916:5;12906:9;:16::i;:::-;12898:5;:24;12890:33;;;;;;;;12940:12;:19;12953:5;12940:19;;;;;;;;;;;;;;;12960:5;12940:26;;;;;;;;;;;;;;;;;;12933:33;;12791:182;;;;:::o;14929:166:5:-;;;;:::o;21547:312:4:-;21613:4;900:7;:5;:7::i;:::-;886:21;;:10;:21;;;878:30;;;;;;;;21698:24;21710:2;21714:7;21698:11;:24::i;:::-;21732:27;21751:7;21732:18;:27::i;:::-;21848:4;21841:11;;21547:312;;;;:::o;7492:132::-;7578:39;7595:4;7601:2;7605:7;7578:39;;;;;;;;;;;;:16;:39::i;:::-;7492:132;;;:::o;24047:400:7:-;24150:6;24168:25;24207:1;24196:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24196:13:7;;;;24168:41;;24232:6;24241:1;24232:10;;24228:88;24248:12;24244:1;:16;24228:88;;;24297:5;24303:1;24297:8;;;;;;;;;;;;;24280:11;24292:1;24280:14;;;;;;;;;;;;;;;;;:25;;;;;24262:3;;;;;;;24228:88;;;;24359:1;24329:26;24336:11;24349:5;24329:6;:26::i;:::-;:31;24325:116;;;24383:4;24376:11;;;;;24325:116;24425:5;24418:12;;;24047:400;;;;;:::o;13556:148:4:-;13614:7;13649:13;:11;:13::i;:::-;13641:5;:21;13633:30;;;;;;;;13680:10;13691:5;13680:17;;;;;;;;;;;;;;;;;;13673:24;;13556:148;;;:::o;5331:162::-;5386:7;5466:11;:20;5478:7;5466:20;;;;;;;;;;;;;;;;;;;;;5459:27;;5331:162;;;:::o;5040:285::-;5095:7;5179:34;:17;:24;5197:5;5179:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5172:41;;5040:285;;;:::o;459:77::-;497:7;523:6;;;;;;;;;;;516:13;;459:77;:::o;19235:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6621:213::-;6706:10;6700:16;;:2;:16;;;;6692:25;;;;;;;;6764:8;6727:18;:30;6746:10;6727:30;;;;;;;;;;;;;;;:34;6758:2;6727:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6814:2;6787:40;;6802:10;6787:40;;;6818:8;6787:40;;;;;;;;;;;;;;;6621:213;;:::o;7630:211::-;7736:31;7749:4;7755:2;7759:7;7736:12;:31::i;:::-;7785:48;7808:4;7814:2;7818:7;7827:5;7785:22;:48::i;:::-;7777:57;;;;;;;;7630:211;;;;:::o;20047:151::-;20105:13;20138:16;20146:7;20138;:16::i;:::-;20130:25;;;;;;;;20172:10;:19;20183:7;20172:19;;;;;;;;;;;20165:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20047:151;;;:::o;7155:145::-;7235:4;7258:18;:25;7277:5;7258:25;;;;;;;;;;;;;;;:35;7284:8;7258:35;;;;;;;;;;;;;;;;;;;;;;;;;7251:42;;7155:145;;;;:::o;983:318::-;900:7;:5;:7::i;:::-;886:21;;:10;:21;;;878:30;;;;;;;;1230:1;1201:31;;1209:8;1201:31;;;;1193:40;;;;;;;;1252:8;1243:6;;:17;;;;;;;;;;;;;;;;;;1275:19;1287:6;;;;;;;;;;;1275:19;;;;;;;;;;;;;;;983:318;:::o;923:218:6:-;978:27;;:::i;:::-;1008:33;;;;;;;;1017:9;:16;;;;1008:33;;;;1035:5;1008:33;;;;;978:63;;1051:9;1066:11;1051:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1051:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:41;1105:10;1117:9;:16;;;;1093:41;;;;;;;;;;;;;;;;923:218;;:::o;8547:246:4:-;8632:4;8648:13;8664:16;8672:7;8664;:16::i;:::-;8648:32;;8709:5;8698:16;;:7;:16;;;:51;;;;8742:7;8718:31;;:20;8730:7;8718:11;:20::i;:::-;:31;;;8698:51;:87;;;;8753:32;8770:5;8777:7;8753:16;:32::i;:::-;8698:87;8690:96;;;8547:246;;;;:::o;14079:239::-;14164:38;14184:4;14190:2;14194:7;14164:19;:38::i;:::-;14213:47;14246:4;14252:7;14213:32;:47::i;:::-;14271:40;14299:2;14303:7;14271:27;:40::i;:::-;14079:239;;;:::o;14573:196::-;14636:24;14648:2;14652:7;14636:11;:24::i;:::-;14671:40;14699:2;14703:7;14671:27;:40::i;:::-;14722;14754:7;14722:31;:40::i;:::-;14573:196;;:::o;20289:617::-;20403:16;20411:7;20403;:16::i;:::-;20395:25;;;;;;;;20781:27;20811:17;20820:7;20811:8;:17::i;:::-;20781:47;;20860:39;20870:13;20860:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20885:13;20860:9;:39::i;:::-;20838:10;:19;20849:7;20838:19;;;;;;;;;;;:61;;;;;;;;;;;;:::i;:::-;;20289:617;;:::o;23121:921:7:-;23201:4;23217:26;23246:77;23217:106;;23333:22;;:::i;:::-;23358:14;:12;:14::i;:::-;23333:39;;23410:2;:12;;;:19;23405:1;23390:5;:12;:16;:39;23382:48;;;;;;;;23487:27;;:::i;:::-;23517:21;;;;;;;;23533:1;23517:21;;;;23536:1;23517:21;;;23487:51;;23553:6;23562:1;23553:10;;23548:197;23569:5;:12;23565:1;:16;23548:197;;;23621:18;23610:5;23616:1;23610:8;;;;;;;;;;;;;;;;;;:29;23602:38;;;;;;;;23661:73;23678:4;23684:49;23703:2;:12;;;23720:1;23716;:5;23703:19;;;;;;;;;;;;;;;;;;23724:5;23730:1;23724:8;;;;;;;;;;;;;;;;;;23684:18;:49::i;:::-;23661:16;:73::i;:::-;23654:80;;23583:3;;;;;;;23548:197;;;;23761:39;23778:4;23784:2;:12;;;23797:1;23784:15;;;;;;;;;;;;;;;;;;23761:16;:39::i;:::-;23754:46;;23814:193;23849:5;:7;;;23858:5;:7;;;23880:20;23895:4;23880:14;:20::i;:::-;23902:2;:8;;;23925:23;23940:5;:7;;;23925:14;:23::i;:::-;23950:2;:8;;;23973:24;23988:2;:8;;;23973:14;:24::i;:::-;23999:2;:7;;;23814:20;:193::i;:::-;23813:194;23810:207;;;24016:1;24009:8;;;;;;;23810:207;24034:1;24027:8;;;;;23121:921;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;10811:347:4:-;10932:4;10957:15;:2;:13;;;:15::i;:::-;10956:16;10952:58;;;10995:4;10988:11;;;;10952:58;11020:13;11052:2;11036:36;;;11073:10;11085:4;11091:7;11100:5;11036:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11036:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11036:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11036:70:4;;;;;;;;;11020:86;;3994:10;11134:16;;11124:26;;;:6;:26;;;;11116:35;;;10811:347;;;;;;;:::o;8035:152::-;8092:4;8108:13;8124:11;:20;8136:7;8124:20;;;;;;;;;;;;;;;;;;;;;8108:36;;8178:1;8161:19;;:5;:19;;;;8154:26;;;8035:152;;;:::o;9617:663::-;9801:4;9781:24;;:16;9789:7;9781;:16::i;:::-;:24;;;9773:33;;;;;;;;9918:1;9893:27;;9901:4;9893:27;;;;9885:36;;;;;;;;9972:23;9987:7;9972:14;:23::i;:::-;10081:33;:17;:21;10099:2;10081:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10124:35;:17;:23;10142:4;10124:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10192:2;10169:11;:20;10181:7;10169:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10265:7;10261:2;10246:27;;10255:4;10246:27;;;;;;;;;;;;9617:663;;;:::o;16545:1128::-;16807:22;16832:32;16862:1;16832:12;:18;16845:4;16832:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;16807:57;;16874:18;16895:17;:26;16913:7;16895:26;;;;;;;;;;;;16874:47;;17039:14;17025:10;:28;;17021:323;;;17069:19;17091:12;:18;17104:4;17091:18;;;;;;;;;;;;;;;17110:14;17091:34;;;;;;;;;;;;;;;;;;17069:56;;17173:11;17140:12;:18;17153:4;17140:18;;;;;;;;;;;;;;;17159:10;17140:30;;;;;;;;;;;;;;;;;:44;;;;17289:10;17256:17;:30;17274:11;17256:30;;;;;;;;;;;:43;;;;17021:323;;17430:12;:18;17443:4;17430:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16545:1128;;;;:::o;15391:183::-;15504:12;:16;15517:2;15504:16;;;;;;;;;;;;;;;:23;;;;15475:17;:26;15493:7;15475:26;;;;;;;;;;;:52;;;;15537:12;:16;15550:2;15537:16;;;;;;;;;;;;;;;15559:7;15537:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15537:30:4;;;;;;;;;;;;;;;;;;;;;;15391:183;;:::o;8950:468::-;9106:16;9114:7;9106;:16::i;:::-;9105:17;9097:26;;;;;;;;9164:1;9141:25;;9149:2;9141:25;;;;9133:34;;;;;;;;9281:2;9258:11;:20;9270:7;9258:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9293:33;:17;:21;9311:2;9293:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9403:7;9399:2;9378:33;;9395:1;9378:33;;;;;;;;;;;;8950:468;;:::o;15769:161::-;15872:10;:17;;;;15845:15;:24;15861:7;15845:24;;;;;;;;;;;:44;;;;15899:10;15915:7;15899:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15899:24:4;;;;;;;;;;;;;;;;;;;;;;15769:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;21165:1951:7:-;21212:22;;:::i;:::-;21257:169;;;;;;;;21281:66;21257:169;;;;21358:66;21257:169;;;21246:2;:8;;:180;;;;21446:327;;;;;;;;;;;;;;;;21471:66;21446:327;;;;21548:66;21446:327;;;;;;;;;;;;;;;21627:66;21446:327;;;;21704:66;21446:327;;;;;;21436:2;:7;;:337;;;;21794:327;;;;;;;;;;;;;;;;21819:66;21794:327;;;;21896:66;21794:327;;;;;;;;;;;;;;;21975:66;21794:327;;;;22052:66;21794:327;;;;;;21783:2;:8;;:338;;;;22142:327;;;;;;;;;;;;;;;;22167:66;22142:327;;;;22244:66;22142:327;;;;;;;;;;;;;;;22323:66;22142:327;;;;22400:66;22142:327;;;;;;22131:2;:8;;:338;;;;22516:1;22494:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22479:2;:12;;:39;;;;22546:169;;;;;;;;22570:66;22546:169;;;;22647:66;22546:169;;;22528:2;:12;;;22541:1;22528:15;;;;;;;;;;;;;;;;;:187;;;;22743:169;;;;;;;;22767:66;22743:169;;;;22844:66;22743:169;;;22725:2;:12;;;22738:1;22725:15;;;;;;;;;;;;;;;;;:187;;;;22940:169;;;;;;;;22964:66;22940:169;;;;23041:66;22940:169;;;22922:2;:12;;;22935:1;22922:15;;;;;;;;;;;;;;;;;:187;;;;21165:1951;:::o;17666:454::-;17735:16;;:::i;:::-;17763:20;;:::i;:::-;17804:1;:3;;;17793:5;17799:1;17793:8;;;;;;;;;;;;:14;;;;;17828:1;:3;;;17817:5;17823:1;17817:8;;;;;;;;;;;;:14;;;;;17852:1;17841:5;17847:1;17841:8;;;;;;;;;;;;:12;;;;;17863;17967:4;17964:1;17958:4;17951:5;17948:1;17941:4;17934:5;17930:16;17919:53;17908:64;;18049:7;18062:1;18057:20;;;;18042:35;;18057:20;18066:9;18042:35;;18105:7;18096:17;;;;;;;;17666:454;;;;;;:::o;16735:493::-;16814:16;;:::i;:::-;16842:20;;:::i;:::-;16883:2;:4;;;16872:5;16878:1;16872:8;;;;;;;;;;;;:15;;;;;16908:2;:4;;;16897:5;16903:1;16897:8;;;;;;;;;;;;:15;;;;;16933:2;:4;;;16922:5;16928:1;16922:8;;;;;;;;;;;;:15;;;;;16958:2;:4;;;16947:5;16953:1;16947:8;;;;;;;;;;;;:15;;;;;16972:12;17076:4;17073:1;17067:4;17060:5;17057:1;17050:4;17043:5;17039:16;17028:53;17017:64;;17158:7;17171:1;17166:20;;;;17151:35;;17166:20;17175:9;17151:35;;17213:7;17205:16;;;;;;;;16735:493;;;;;;:::o;16344:340::-;16401:14;;:::i;:::-;16479:6;16488:77;16479:86;;16586:1;16579;:3;;;:8;:20;;;;;16598:1;16591;:3;;;:8;16579:20;16575:58;;;16620:13;;;;;;;;16628:1;16620:13;;;;16631:1;16620:13;;;16613:20;;;;;16575:58;16650:27;;;;;;;;16658:1;:3;;;16650:27;;;;16674:1;16668;:3;;;:7;;;;;;;;16663:1;:13;16650:27;;;16643:34;;;16344:340;;;;:::o;20262:552::-;20513:4;20529:19;20565:1;20551:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20529:38;;20577:19;20613:1;20599:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20577:38;;20633:2;20625;20628:1;20625:5;;;;;;;;;;;;;;;;;:10;;;;20653:2;20645;20648:1;20645:5;;;;;;;;;;;;;;;;;:10;;;;20673:2;20665;20668:1;20665:5;;;;;;;;;;;;;;;;;:10;;;;20693:2;20685;20688:1;20685:5;;;;;;;;;;;;;;;;;:10;;;;20713:2;20705;20708:1;20705:5;;;;;;;;;;;;;;;;;:10;;;;20733:2;20725;20728:1;20725:5;;;;;;;;;;;;;;;;;:10;;;;20753:2;20745;20748:1;20745:5;;;;;;;;;;;;;;;;;:10;;;;20773:2;20765;20768:1;20765:5;;;;;;;;;;;;;;;;;:10;;;;20792:15;20800:2;20804;20792:7;:15::i;:::-;20785:22;;;;20262:552;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11239:171:4:-;11338:1;11302:38;;:15;:24;11318:7;11302:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11298:106;;;11391:1;11356:15;:24;11372:7;11356:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11298:106;11239:171;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;18331:923:7:-;18413:4;18450:2;:9;18437:2;:9;:22;18429:31;;;;;;;;18470:13;18486:2;:9;18470:25;;18505:14;18533:1;18522:8;:12;18505:29;;18544:19;18577:9;18566:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18566:21:7;;;;18544:43;;18602:6;18611:1;18602:10;;18597:307;18618:8;18614:1;:12;18597:307;;;18674:2;18677:1;18674:5;;;;;;;;;;;;;;;;;;:7;;;18655:5;18669:1;18665;18661;:5;:9;18655:16;;;;;;;;;;;;;;;;;:26;;;;;18714:2;18717:1;18714:5;;;;;;;;;;;;;;;;;;:7;;;18695:5;18709:1;18705;18701;:5;:9;18695:16;;;;;;;;;;;;;;;;;:26;;;;;18754:2;18757:1;18754:5;;;;;;;;;;;;;;;;;;:7;;;18762:1;18754:10;;;;;;;;;;;;;18735:5;18749:1;18745;18741;:5;:9;18735:16;;;;;;;;;;;;;;;;;:29;;;;;18797:2;18800:1;18797:5;;;;;;;;;;;;;;;;;;:7;;;18805:1;18797:10;;;;;;;;;;;;;18778:5;18792:1;18788;18784;:5;:9;18778:16;;;;;;;;;;;;;;;;;:29;;;;;18840:2;18843:1;18840:5;;;;;;;;;;;;;;;;;;:7;;;18848:1;18840:10;;;;;;;;;;;;;18821:5;18835:1;18831;18827;:5;:9;18821:16;;;;;;;;;;;;;;;;;:29;;;;;18883:2;18886:1;18883:5;;;;;;;;;;;;;;;;;;:7;;;18891:1;18883:10;;;;;;;;;;;;;18864:5;18878:1;18874;18870;:5;:9;18864:16;;;;;;;;;;;;;;;;;:29;;;;;18628:3;;;;;;;18597:307;;;;18913:18;;:::i;:::-;18941:12;19074:4;19069:3;19062:4;19051:9;19047:20;19040:4;19033:5;19029:16;19026:1;19019:4;19012:5;19008:16;18997:82;18986:93;;19156:7;19169:1;19164:20;;;;19149:35;;19164:20;19173:9;19149:35;;19211:7;19203:16;;;;;;;;19246:1;19236:3;19240:1;19236:6;;;;;;;;;;;;;:11;;19229:18;;;;;;;18331:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;334:1720:6:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;334:1720:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;334:1720:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;334:1720:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;334:1720:6;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:607;;260:3;253:4;245:6;241:17;237:27;230:35;227:2;;;278:1;275;268:12;227:2;302:3;320:74;335:58;386:6;335:58;;;320:74;;;311:83;;411:5;470:6;517:3;509:4;501:6;497:17;492:3;488:27;485:36;482:2;;;534:1;531;524:12;482:2;559:1;544:206;569:6;566:1;563:13;544:206;;;627:3;649:37;682:3;670:10;649:37;;;644:3;637:50;710:4;705:3;701:14;694:21;;738:4;733:3;729:14;722:21;;601:149;591:1;588;584:9;579:14;;544:206;;;548:14;220:536;;;;;;;;783:615;;898:3;891:4;883:6;879:17;875:27;868:35;865:2;;;916:1;913;906:12;865:2;940:3;958:78;973:62;1028:6;973:62;;;958:78;;;949:87;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1286:3;1279:50;1352:4;1347:3;1343:14;1336:21;;1380:4;1375:3;1371:14;1364:21;;1243:149;1233:1;1230;1226:9;1221:14;;1186:206;;;1190:14;858:540;;;;;;;;1406:112;;1470:43;1505:6;1492:20;1470:43;;;1461:52;;1455:63;;;;;1525:118;;1592:46;1630:6;1617:20;1592:46;;;1583:55;;1577:66;;;;;1650:116;;1716:45;1753:6;1740:20;1716:45;;;1707:54;;1701:65;;;;;1773:120;;1850:38;1880:6;1874:13;1850:38;;;1841:47;;1835:58;;;;;1901:440;;2002:3;1995:4;1987:6;1983:17;1979:27;1972:35;1969:2;;;2020:1;2017;2010:12;1969:2;2057:6;2044:20;2079:64;2094:48;2135:6;2094:48;;;2079:64;;;2070:73;;2163:6;2156:5;2149:21;2199:4;2191:6;2187:17;2232:4;2225:5;2221:16;2267:3;2258:6;2253:3;2249:16;2246:25;2243:2;;;2284:1;2281;2274:12;2243:2;2294:41;2328:6;2323:3;2318;2294:41;;;1962:379;;;;;;;;2350:442;;2452:3;2445:4;2437:6;2433:17;2429:27;2422:35;2419:2;;;2470:1;2467;2460:12;2419:2;2507:6;2494:20;2529:65;2544:49;2586:6;2544:49;;;2529:65;;;2520:74;;2614:6;2607:5;2600:21;2650:4;2642:6;2638:17;2683:4;2676:5;2672:16;2718:3;2709:6;2704:3;2700:16;2697:25;2694:2;;;2735:1;2732;2725:12;2694:2;2745:41;2779:6;2774:3;2769;2745:41;;;2412:380;;;;;;;;2829:456;;2939:4;2927:9;2922:3;2918:19;2914:30;2911:2;;;2957:1;2954;2947:12;2911:2;2975:20;2990:4;2975:20;;;2966:29;;3042:1;3073:49;3118:3;3109:6;3098:9;3094:22;3073:49;;;3067:3;3060:5;3056:15;3049:74;3005:129;3181:2;3214:49;3259:3;3250:6;3239:9;3235:22;3214:49;;;3207:4;3200:5;3196:16;3189:75;3144:131;2905:380;;;;;3321:494;;3431:4;3419:9;3414:3;3410:19;3406:30;3403:2;;;3449:1;3446;3439:12;3403:2;3467:20;3482:4;3467:20;;;3458:29;;3534:1;3565:68;3629:3;3620:6;3609:9;3605:22;3565:68;;;3559:3;3552:5;3548:15;3541:93;3497:148;3692:2;3725:68;3789:3;3780:6;3769:9;3765:22;3725:68;;;3718:4;3711:5;3707:16;3700:94;3655:150;3397:418;;;;;3850:664;;3962:5;3950:9;3945:3;3941:19;3937:31;3934:2;;;3981:1;3978;3971:12;3934:2;3999:20;4014:4;3999:20;;;3990:29;;4066:1;4097:70;4163:3;4154:6;4143:9;4139:22;4097:70;;;4091:3;4084:5;4080:15;4073:95;4029:150;4226:2;4259:70;4325:3;4316:6;4305:9;4301:22;4259:70;;;4252:4;4245:5;4241:16;4234:96;4189:152;4388:3;4422:70;4488:3;4479:6;4468:9;4464:22;4422:70;;;4415:4;4408:5;4404:16;4397:96;4351:153;3928:586;;;;;4521:118;;4588:46;4626:6;4613:20;4588:46;;;4579:55;;4573:66;;;;;4646:241;;4750:2;4738:9;4729:7;4725:23;4721:32;4718:2;;;4766:1;4763;4756:12;4718:2;4801:1;4818:53;4863:7;4854:6;4843:9;4839:22;4818:53;;;4808:63;;4780:97;4712:175;;;;;4894:366;;;5015:2;5003:9;4994:7;4990:23;4986:32;4983:2;;;5031:1;5028;5021:12;4983:2;5066:1;5083:53;5128:7;5119:6;5108:9;5104:22;5083:53;;;5073:63;;5045:97;5173:2;5191:53;5236:7;5227:6;5216:9;5212:22;5191:53;;;5181:63;;5152:98;4977:283;;;;;;5267:491;;;;5405:2;5393:9;5384:7;5380:23;5376:32;5373:2;;;5421:1;5418;5411:12;5373:2;5456:1;5473:53;5518:7;5509:6;5498:9;5494:22;5473:53;;;5463:63;;5435:97;5563:2;5581:53;5626:7;5617:6;5606:9;5602:22;5581:53;;;5571:63;;5542:98;5671:2;5689:53;5734:7;5725:6;5714:9;5710:22;5689:53;;;5679:63;;5650:98;5367:391;;;;;;5765:721;;;;;5929:3;5917:9;5908:7;5904:23;5900:33;5897:2;;;5946:1;5943;5936:12;5897:2;5981:1;5998:53;6043:7;6034:6;6023:9;6019:22;5998:53;;;5988:63;;5960:97;6088:2;6106:53;6151:7;6142:6;6131:9;6127:22;6106:53;;;6096:63;;6067:98;6196:2;6214:53;6259:7;6250:6;6239:9;6235:22;6214:53;;;6204:63;;6175:98;6332:2;6321:9;6317:18;6304:32;6356:18;6348:6;6345:30;6342:2;;;6388:1;6385;6378:12;6342:2;6408:62;6462:7;6453:6;6442:9;6438:22;6408:62;;;6398:72;;6283:193;5891:595;;;;;;;;6493:360;;;6611:2;6599:9;6590:7;6586:23;6582:32;6579:2;;;6627:1;6624;6617:12;6579:2;6662:1;6679:53;6724:7;6715:6;6704:9;6700:22;6679:53;;;6669:63;;6641:97;6769:2;6787:50;6829:7;6820:6;6809:9;6805:22;6787:50;;;6777:60;;6748:95;6573:280;;;;;;6860:366;;;6981:2;6969:9;6960:7;6956:23;6952:32;6949:2;;;6997:1;6994;6987:12;6949:2;7032:1;7049:53;7094:7;7085:6;7074:9;7070:22;7049:53;;;7039:63;;7011:97;7139:2;7157:53;7202:7;7193:6;7182:9;7178:22;7157:53;;;7147:63;;7118:98;6943:283;;;;;;7233:710;;;;;7434:3;7422:9;7413:7;7409:23;7405:33;7402:2;;;7451:1;7448;7441:12;7402:2;7486:1;7503:53;7548:7;7539:6;7528:9;7524:22;7503:53;;;7493:63;;7465:97;7593:2;7611:53;7656:7;7647:6;7636:9;7632:22;7611:53;;;7601:63;;7572:98;7701:2;7719:76;7787:7;7778:6;7767:9;7763:22;7719:76;;;7709:86;;7680:121;7832:3;7851:76;7919:7;7910:6;7899:9;7895:22;7851:76;;;7841:86;;7811:122;7396:547;;;;;;;;7950:235;;8051:2;8039:9;8030:7;8026:23;8022:32;8019:2;;;8067:1;8064;8057:12;8019:2;8102:1;8119:50;8161:7;8152:6;8141:9;8137:22;8119:50;;;8109:60;;8081:94;8013:172;;;;;8192:472;;;8323:2;8311:9;8302:7;8298:23;8294:32;8291:2;;;8339:1;8336;8329:12;8291:2;8374:1;8391:53;8436:7;8427:6;8416:9;8412:22;8391:53;;;8381:63;;8353:97;8509:2;8498:9;8494:18;8481:32;8533:18;8525:6;8522:30;8519:2;;;8565:1;8562;8555:12;8519:2;8585:63;8640:7;8631:6;8620:9;8616:22;8585:63;;;8575:73;;8460:194;8285:379;;;;;;8671:701;;;;8828:2;8816:9;8807:7;8803:23;8799:32;8796:2;;;8844:1;8841;8834:12;8796:2;8879:1;8896:53;8941:7;8932:6;8921:9;8917:22;8896:53;;;8886:63;;8858:97;9014:2;9003:9;8999:18;8986:32;9038:18;9030:6;9027:30;9024:2;;;9070:1;9067;9060:12;9024:2;9090:63;9145:7;9136:6;9125:9;9121:22;9090:63;;;9080:73;;8965:194;9218:2;9207:9;9203:18;9190:32;9242:18;9234:6;9231:30;9228:2;;;9274:1;9271;9264:12;9228:2;9294:62;9348:7;9339:6;9328:9;9324:22;9294:62;;;9284:72;;9169:193;8790:582;;;;;;9379:239;;9482:2;9470:9;9461:7;9457:23;9453:32;9450:2;;;9498:1;9495;9488:12;9450:2;9533:1;9550:52;9594:7;9585:6;9574:9;9570:22;9550:52;;;9540:62;;9512:96;9444:174;;;;;9625:261;;9739:2;9727:9;9718:7;9714:23;9710:32;9707:2;;;9755:1;9752;9745:12;9707:2;9790:1;9807:63;9862:7;9853:6;9842:9;9838:22;9807:63;;;9797:73;;9769:107;9701:185;;;;;9893:460;;;10060:3;10048:9;10039:7;10035:23;10031:33;10028:2;;;10077:1;10074;10067:12;10028:2;10112:1;10129:76;10197:7;10188:6;10177:9;10173:22;10129:76;;;10119:86;;10091:120;10242:3;10261:76;10329:7;10320:6;10309:9;10305:22;10261:76;;;10251:86;;10221:122;10022:331;;;;;;10360:241;;10464:2;10452:9;10443:7;10439:23;10435:32;10432:2;;;10480:1;10477;10470:12;10432:2;10515:1;10532:53;10577:7;10568:6;10557:9;10553:22;10532:53;;;10522:63;;10494:97;10426:175;;;;;10609:187;;10703:53;10752:3;10745:5;10703:53;;;10785:4;10780:3;10776:14;10762:28;;10696:100;;;;;10804:142;10895:45;10934:5;10895:45;;;10890:3;10883:58;10877:69;;;10953:120;11036:31;11061:5;11036:31;;;11031:3;11024:44;11018:55;;;11113:635;11264:52;11310:5;11264:52;;;11329:102;11424:6;11419:3;11329:102;;;11322:109;;11451:54;11499:5;11451:54;;;11526:1;11511:225;11536:6;11533:1;11530:13;11511:225;;;11583:71;11650:3;11641:6;11635:13;11583:71;;;11576:78;;11671:58;11722:6;11671:58;;;11661:68;;11558:1;11555;11551:9;11546:14;;11511:225;;;11515:14;11243:505;;;;;11789:619;11936:48;11978:5;11936:48;;;11997:102;12092:6;12087:3;11997:102;;;11990:109;;12119:50;12163:5;12119:50;;;12190:1;12175:221;12200:6;12197:1;12194:13;12175:221;;;12247:71;12314:3;12305:6;12299:13;12247:71;;;12240:78;;12335:54;12382:6;12335:54;;;12325:64;;12222:1;12219;12215:9;12210:14;;12175:221;;;12179:14;11915:493;;;;;12416:111;12493:28;12515:5;12493:28;;;12488:3;12481:41;12475:52;;;12534:343;;12644:38;12676:5;12644:38;;;12694:70;12757:6;12752:3;12694:70;;;12687:77;;12769:52;12814:6;12809:3;12802:4;12795:5;12791:16;12769:52;;;12842:29;12864:6;12842:29;;;12837:3;12833:39;12826:46;;12624:253;;;;;;12884:347;;12996:39;13029:5;12996:39;;;13047:71;13111:6;13106:3;13047:71;;;13040:78;;13123:52;13168:6;13163:3;13156:4;13149:5;13145:16;13123:52;;;13196:29;13218:6;13196:29;;;13191:3;13187:39;13180:46;;12976:255;;;;;;13238:339;;13346:35;13375:5;13346:35;;;13393:71;13457:6;13452:3;13393:71;;;13386:78;;13469:52;13514:6;13509:3;13502:4;13495:5;13491:16;13469:52;;;13542:29;13564:6;13542:29;;;13537:3;13533:39;13526:46;;13326:251;;;;;;13585:364;;13745:67;13809:2;13804:3;13745:67;;;13738:74;;13845:66;13841:1;13836:3;13832:11;13825:87;13940:2;13935:3;13931:12;13924:19;;13731:218;;;;13958:465;;14118:67;14182:2;14177:3;14118:67;;;14111:74;;14218:66;14214:1;14209:3;14205:11;14198:87;14319:66;14314:2;14309:3;14305:12;14298:88;14414:2;14409:3;14405:12;14398:19;;14104:319;;;;14431:120;14514:31;14539:5;14514:31;;;14509:3;14502:44;14496:55;;;14558:118;14639:31;14664:5;14639:31;;;14634:3;14627:44;14621:55;;;14683:159;14784:52;14804:31;14829:5;14804:31;;;14784:52;;;14779:3;14772:65;14766:76;;;14849:1338;;15266:121;15383:3;15374:6;15266:121;;;15409:2;15404:3;15400:12;15393:19;;15423:75;15494:3;15485:6;15423:75;;;15520:2;15515:3;15511:12;15504:19;;15534:75;15605:3;15596:6;15534:75;;;15631:2;15626:3;15622:12;15615:19;;15645:117;15758:3;15749:6;15645:117;;;15784:2;15779:3;15775:12;15768:19;;15798:117;15911:3;15902:6;15798:117;;;15937:2;15932:3;15928:12;15921:19;;15951:75;16022:3;16013:6;15951:75;;;16048:2;16043:3;16039:12;16032:19;;16062:75;16133:3;16124:6;16062:75;;;16159:2;16154:3;16150:12;16143:19;;16179:3;16172:10;;15254:933;;;;;;;;;;;16194:213;;16312:2;16301:9;16297:18;16289:26;;16326:71;16394:1;16383:9;16379:17;16370:6;16326:71;;;16283:124;;;;;16414:647;;16642:3;16631:9;16627:19;16619:27;;16657:79;16733:1;16722:9;16718:17;16709:6;16657:79;;;16747:72;16815:2;16804:9;16800:18;16791:6;16747:72;;;16830;16898:2;16887:9;16883:18;16874:6;16830:72;;;16950:9;16944:4;16940:20;16935:2;16924:9;16920:18;16913:48;16975:76;17046:4;17037:6;16975:76;;;16967:84;;16613:448;;;;;;;;17068:340;;17222:2;17211:9;17207:18;17199:26;;17236:79;17312:1;17301:9;17297:17;17288:6;17236:79;;;17326:72;17394:2;17383:9;17379:18;17370:6;17326:72;;;17193:215;;;;;;17415:201;;17527:2;17516:9;17512:18;17504:26;;17541:65;17603:1;17592:9;17588:17;17579:6;17541:65;;;17498:118;;;;;17623:293;;17757:2;17746:9;17742:18;17734:26;;17807:9;17801:4;17797:20;17793:1;17782:9;17778:17;17771:47;17832:74;17901:4;17892:6;17832:74;;;17824:82;;17728:188;;;;;17923:301;;18061:2;18050:9;18046:18;18038:26;;18111:9;18105:4;18101:20;18097:1;18086:9;18082:17;18075:47;18136:78;18209:4;18200:6;18136:78;;;18128:86;;18032:192;;;;;18231:407;;18422:2;18411:9;18407:18;18399:26;;18472:9;18466:4;18462:20;18458:1;18447:9;18443:17;18436:47;18497:131;18623:4;18497:131;;;18489:139;;18393:245;;;;18645:407;;18836:2;18825:9;18821:18;18813:26;;18886:9;18880:4;18876:20;18872:1;18861:9;18857:17;18850:47;18911:131;19037:4;18911:131;;;18903:139;;18807:245;;;;19059:213;;19177:2;19166:9;19162:18;19154:26;;19191:71;19259:1;19248:9;19244:17;19235:6;19191:71;;;19148:124;;;;;19279:256;;19341:2;19335:9;19325:19;;19379:4;19371:6;19367:17;19478:6;19466:10;19463:22;19442:18;19430:10;19427:34;19424:62;19421:2;;;19499:1;19496;19489:12;19421:2;19519:10;19515:2;19508:22;19319:216;;;;;19542:229;;19695:18;19687:6;19684:30;19681:2;;;19727:1;19724;19717:12;19681:2;19756:4;19748:6;19744:17;19736:25;;19618:153;;;;19778:233;;19935:18;19927:6;19924:30;19921:2;;;19967:1;19964;19957:12;19921:2;19996:4;19988:6;19984:17;19976:25;;19858:153;;;;20018:258;;20161:18;20153:6;20150:30;20147:2;;;20193:1;20190;20183:12;20147:2;20237:4;20233:9;20226:4;20218:6;20214:17;20210:33;20202:41;;20266:4;20260;20256:15;20248:23;;20084:192;;;;20283:259;;20427:18;20419:6;20416:30;20413:2;;;20459:1;20456;20449:12;20413:2;20503:4;20499:9;20492:4;20484:6;20480:17;20476:33;20468:41;;20532:4;20526;20522:15;20514:23;;20350:192;;;;20551:104;;20642:6;20631:17;;20623:32;;;;20666:108;;20761:6;20750:17;;20742:32;;;;20783:92;;20867:3;20857:13;;20851:24;;;;20882:96;;20970:3;20960:13;;20954:24;;;;20985:91;;21065:5;21059:12;21049:22;;21043:33;;;;21083:88;;21160:5;21154:12;21144:22;;21138:33;;;;21178:92;;21259:5;21253:12;21243:22;;21237:33;;;;21278:116;;21383:4;21375:6;21371:17;21360:28;;21353:41;;;;21403:120;;21512:4;21504:6;21500:17;21489:28;;21482:41;;;;21532:158;;21681:3;21666:18;;21659:31;;;;;21699:162;;21813:6;21808:3;21801:19;21850:4;21845:3;21841:14;21826:29;;21794:67;;;;;21870:163;;21985:6;21980:3;21973:19;22022:4;22017:3;22013:14;21998:29;;21966:67;;;;;22041:105;;22110:31;22135:5;22110:31;;;22099:42;;22093:53;;;;22153:92;;22233:5;22226:13;22219:21;22208:32;;22202:43;;;;22252:128;;22332:42;22325:5;22321:54;22310:65;;22304:76;;;;22387:79;;22456:5;22445:16;;22439:27;;;;22473:105;;22542:31;22567:5;22542:31;;;22531:42;;22525:53;;;;22585:92;;22665:5;22658:13;22651:21;22640:32;;22634:43;;;;22684:79;;22753:5;22742:16;;22736:27;;;;22770:151;;22849:66;22842:5;22838:78;22827:89;;22821:100;;;;22928:128;;23008:42;23001:5;22997:54;22986:65;;22980:76;;;;23063:79;;23132:5;23121:16;;23115:27;;;;23149:129;;23236:37;23267:5;23236:37;;;23223:50;;23217:61;;;;23285:121;;23364:37;23395:5;23364:37;;;23351:50;;23345:61;;;;23413:115;;23492:31;23517:5;23492:31;;;23479:44;;23473:55;;;;23536:145;23617:6;23612:3;23607;23594:30;23673:1;23664:6;23659:3;23655:16;23648:27;23587:94;;;;23690:268;23755:1;23762:101;23776:6;23773:1;23770:13;23762:101;;;23852:1;23847:3;23843:11;23837:18;23833:1;23828:3;23824:11;23817:39;23798:2;23795:1;23791:10;23786:15;;23762:101;;;23878:6;23875:1;23872:13;23869:2;;;23943:1;23934:6;23929:3;23925:16;23918:27;23869:2;23739:219;;;;;23966:74;;24030:5;24019:16;;24013:27;;;;24047:97;;24135:2;24131:7;24126:2;24119:5;24115:14;24111:28;24101:38;;24095:49;;;",
  "source": "pragma experimental ABIEncoderV2;\npragma solidity ^0.5.5;\n\nimport \"./ZokratesVerifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is Verifier, CustomERC721Token {\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint index;\n        address owner;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] solutions;\n\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => address) uniqueSolutions;\n\n\n\n    // TODO Create an event to emit when a solution is added\n    event NewSolution(address, uint);\n\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address owner) internal {\n        Solution memory newSolution = Solution(solutions.length, owner);\n        solutions.push(newSolution);\n        emit NewSolution(msg.sender, solutions.length);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintNFT(address owner, uint id, Proof memory proof, uint[2] memory input) public returns ( bool ) {\n        require(verifyTx(proof, input), \"Sorry, you need to provide proof of ownership.\");\n        // bytes memory solutionHash = abi.encodePacked(uint[input[0], input[1], proof.a[0]]);\n\n        bytes32 solutionHash = keccak256(abi.encodePacked(input, proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y));\n        \n        require(uniqueSolutions[solutionHash] == address(0), \"Sorry, not a unique solution\");\n        uniqueSolutions[solutionHash] = owner;\n\n        addSolution(owner);\n       \n        bool minted = mint(owner, id);\n\n        return minted;\n    }\n}\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/home/richardmands/_cinderhouse/crypto/udacity_nanodegree/Project05Capstone/Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7811
      ]
    },
    "id": 7812,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7677,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:6"
      },
      {
        "id": 7678,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:6"
      },
      {
        "absolutePath": "project:/contracts/ZokratesVerifier.sol",
        "file": "./ZokratesVerifier.sol",
        "id": 7679,
        "nodeType": "ImportDirective",
        "scope": 7812,
        "sourceUnit": 10290,
        "src": "59:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7680,
        "nodeType": "ImportDirective",
        "scope": 7812,
        "sourceUnit": 1408,
        "src": "92:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7681,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10289,
              "src": "365:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10289",
                "typeString": "contract Verifier"
              }
            },
            "id": 7682,
            "nodeType": "InheritanceSpecifier",
            "src": "365:8:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7683,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1407,
              "src": "375:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1407",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7684,
            "nodeType": "InheritanceSpecifier",
            "src": "375:17:6"
          }
        ],
        "contractDependencies": [
          400,
          453,
          985,
          499,
          1283,
          1374,
          1407,
          7675,
          10289
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7811,
        "linearizedBaseContracts": [
          7811,
          1407,
          1374,
          7675,
          1283,
          985,
          499,
          453,
          400,
          10289
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7689,
            "members": [
              {
                "constant": false,
                "id": 7686,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7689,
                "src": "500:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7685,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7688,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 7689,
                "src": "520:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7687,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7811,
            "src": "474:66:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7692,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7811,
            "src": "594:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7689_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7690,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7689,
                "src": "594:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7689_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7691,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "594:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7689_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7696,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7811,
            "src": "687:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 7695,
              "keyType": {
                "id": 7693,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "695:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "687:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 7694,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "706:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7702,
            "name": "NewSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7698,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "818:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7700,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "827:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7699,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "817:15:6"
            },
            "src": "800:33:6"
          },
          {
            "body": {
              "id": 7728,
              "nodeType": "Block",
              "src": "968:173:6",
              "statements": [
                {
                  "assignments": [
                    7708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7708,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7728,
                      "src": "978:27:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7689_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7707,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7689,
                        "src": "978:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7689_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7714,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7710,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7692,
                          "src": "1017:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7689_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1017:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7712,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "1035:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7709,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7689,
                      "src": "1008:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7689_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7689_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "978:63:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7718,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "1066:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7689_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7689_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7715,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7692,
                        "src": "1051:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7689_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1051:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7689_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7720,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7722,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10304,
                          "src": "1105:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1105:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7724,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7692,
                          "src": "1117:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7689_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1117:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7721,
                      "name": "NewSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7702,
                      "src": "1093:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7727,
                  "nodeType": "EmitStatement",
                  "src": "1088:46:6"
                }
              ]
            },
            "documentation": null,
            "id": 7729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7704,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "944:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:15:6"
            },
            "returnParameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:0:6"
            },
            "scope": 7811,
            "src": "923:218:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7809,
              "nodeType": "Block",
              "src": "1475:577:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7746,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7735,
                            "src": "1502:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7747,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7739,
                            "src": "1509:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7745,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10288,
                          "src": "1493:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Proof_$9963_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1493:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f75206e65656420746f2070726f766964652070726f6f66206f66206f776e6572736869702e",
                        "id": 7749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:48:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb46b51557dbc431070b53ffe96993590c943f1d5c0d20b1d08d2bf504d4b9ba",
                          "typeString": "literal_string \"Sorry, you need to provide proof of ownership.\""
                        },
                        "value": "Sorry, you need to provide proof of ownership."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb46b51557dbc431070b53ffe96993590c943f1d5c0d20b1d08d2bf504d4b9ba",
                          "typeString": "literal_string \"Sorry, you need to provide proof of ownership.\""
                        }
                      ],
                      "id": 7744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10307,
                        10308
                      ],
                      "referencedDeclaration": 10308,
                      "src": "1485:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:81:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7751,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:81:6"
                },
                {
                  "assignments": [
                    7753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7753,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7809,
                      "src": "1672:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7752,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1672:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7778,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7757,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7739,
                            "src": "1722:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7758,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1729:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7759,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9958,
                              "src": "1729:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$9310_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7760,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9307,
                            "src": "1729:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7761,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1740:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9958,
                              "src": "1740:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$9310_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7763,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9309,
                            "src": "1740:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7764,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1751:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7765,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9960,
                              "src": "1751:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$9319_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7766,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9314,
                            "src": "1751:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7767,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1762:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7768,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9960,
                              "src": "1762:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$9319_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7769,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9318,
                            "src": "1762:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7770,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1773:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7771,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9962,
                              "src": "1773:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$9310_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9307,
                            "src": "1773:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7773,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7735,
                                "src": "1784:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7774,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9962,
                              "src": "1784:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$9310_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9309,
                            "src": "1784:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7755,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10291,
                            "src": "1705:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1705:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:89:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7754,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10298,
                      "src": "1695:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:100:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1672:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7780,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7696,
                            "src": "1822:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 7782,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7781,
                            "name": "solutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7753,
                            "src": "1838:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1822:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1863:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1855:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1822:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c206e6f74206120756e6971756520736f6c7574696f6e",
                        "id": 7787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:30:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea97c8cd92228de2775172b75918dfaf5c02be63f5a0f16aabc64ceb0f4a74b7",
                          "typeString": "literal_string \"Sorry, not a unique solution\""
                        },
                        "value": "Sorry, not a unique solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea97c8cd92228de2775172b75918dfaf5c02be63f5a0f16aabc64ceb0f4a74b7",
                          "typeString": "literal_string \"Sorry, not a unique solution\""
                        }
                      ],
                      "id": 7779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10307,
                        10308
                      ],
                      "referencedDeclaration": 10308,
                      "src": "1814:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:84:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7789,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:84:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7696,
                        "src": "1908:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 7792,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7791,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7753,
                        "src": "1924:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1908:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7793,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7731,
                      "src": "1940:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1908:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7795,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7797,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1968:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7796,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7729,
                      "src": "1956:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7799,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:18:6"
                },
                {
                  "assignments": [
                    7801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7801,
                      "name": "minted",
                      "nodeType": "VariableDeclaration",
                      "scope": 7809,
                      "src": "1992:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7800,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1992:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7806,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7803,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "2011:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7804,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7733,
                        "src": "2018:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7802,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "2006:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1992:29:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7807,
                    "name": "minted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7801,
                    "src": "2039:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7743,
                  "id": 7808,
                  "nodeType": "Return",
                  "src": "2032:13:6"
                }
              ]
            },
            "documentation": null,
            "id": 7810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7731,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1385:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7733,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1400:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7735,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1409:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7734,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9963,
                    "src": "1409:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$9963_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1429:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7736,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1429:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7738,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1434:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1429:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1384:66:6"
            },
            "returnParameters": {
              "id": 7743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7742,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1468:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1466:8:6"
            },
            "scope": 7811,
            "src": "1368:684:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7812,
        "src": "334:1720:6"
      }
    ],
    "src": "0:2092:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7811
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7677,
        "name": "PragmaDirective",
        "src": "0:33:6"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".5"
          ]
        },
        "id": 7678,
        "name": "PragmaDirective",
        "src": "34:23:6"
      },
      {
        "attributes": {
          "SourceUnit": 10290,
          "absolutePath": "project:/contracts/ZokratesVerifier.sol",
          "file": "./ZokratesVerifier.sol",
          "scope": 7812,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7679,
        "name": "ImportDirective",
        "src": "59:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 1408,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7812,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7680,
        "name": "ImportDirective",
        "src": "92:30:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            400,
            453,
            985,
            499,
            1283,
            1374,
            1407,
            7675,
            10289
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7811,
            1407,
            1374,
            7675,
            1283,
            985,
            499,
            453,
            400,
            10289
          ],
          "name": "SolnSquareVerifier",
          "scope": 7812
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10289,
                  "type": "contract Verifier"
                },
                "id": 7681,
                "name": "UserDefinedTypeName",
                "src": "365:8:6"
              }
            ],
            "id": 7682,
            "name": "InheritanceSpecifier",
            "src": "365:8:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1407,
                  "type": "contract CustomERC721Token"
                },
                "id": 7683,
                "name": "UserDefinedTypeName",
                "src": "375:17:6"
              }
            ],
            "id": 7684,
            "name": "InheritanceSpecifier",
            "src": "375:17:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7811,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7689,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 7685,
                    "name": "ElementaryTypeName",
                    "src": "500:4:6"
                  }
                ],
                "id": 7686,
                "name": "VariableDeclaration",
                "src": "500:10:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 7689,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7687,
                    "name": "ElementaryTypeName",
                    "src": "520:7:6"
                  }
                ],
                "id": 7688,
                "name": "VariableDeclaration",
                "src": "520:13:6"
              }
            ],
            "id": 7689,
            "name": "StructDefinition",
            "src": "474:66:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7811,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7689,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7690,
                    "name": "UserDefinedTypeName",
                    "src": "594:8:6"
                  }
                ],
                "id": 7691,
                "name": "ArrayTypeName",
                "src": "594:10:6"
              }
            ],
            "id": 7692,
            "name": "VariableDeclaration",
            "src": "594:20:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7811,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => address)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => address)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7693,
                    "name": "ElementaryTypeName",
                    "src": "695:7:6"
                  },
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7694,
                    "name": "ElementaryTypeName",
                    "src": "706:7:6"
                  }
                ],
                "id": 7695,
                "name": "Mapping",
                "src": "687:27:6"
              }
            ],
            "id": 7696,
            "name": "VariableDeclaration",
            "src": "687:43:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "NewSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7702,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7697,
                        "name": "ElementaryTypeName",
                        "src": "818:7:6"
                      }
                    ],
                    "id": 7698,
                    "name": "VariableDeclaration",
                    "src": "818:7:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7702,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7699,
                        "name": "ElementaryTypeName",
                        "src": "827:4:6"
                      }
                    ],
                    "id": 7700,
                    "name": "VariableDeclaration",
                    "src": "827:4:6"
                  }
                ],
                "id": 7701,
                "name": "ParameterList",
                "src": "817:15:6"
              }
            ],
            "id": 7702,
            "name": "EventDefinition",
            "src": "800:33:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7811,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7729,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7703,
                        "name": "ElementaryTypeName",
                        "src": "944:7:6"
                      }
                    ],
                    "id": 7704,
                    "name": "VariableDeclaration",
                    "src": "944:13:6"
                  }
                ],
                "id": 7705,
                "name": "ParameterList",
                "src": "943:15:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7706,
                "name": "ParameterList",
                "src": "968:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7708
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSolution",
                          "scope": 7728,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7689,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7707,
                            "name": "UserDefinedTypeName",
                            "src": "978:8:6"
                          }
                        ],
                        "id": 7708,
                        "name": "VariableDeclaration",
                        "src": "978:27:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7689,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7709,
                            "name": "Identifier",
                            "src": "1008:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7692,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7710,
                                "name": "Identifier",
                                "src": "1017:9:6"
                              }
                            ],
                            "id": 7711,
                            "name": "MemberAccess",
                            "src": "1017:16:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7704,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7712,
                            "name": "Identifier",
                            "src": "1035:5:6"
                          }
                        ],
                        "id": 7713,
                        "name": "FunctionCall",
                        "src": "1008:33:6"
                      }
                    ],
                    "id": 7714,
                    "name": "VariableDeclarationStatement",
                    "src": "978:63:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7689_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7692,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7715,
                                "name": "Identifier",
                                "src": "1051:9:6"
                              }
                            ],
                            "id": 7717,
                            "name": "MemberAccess",
                            "src": "1051:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7708,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "newSolution"
                            },
                            "id": 7718,
                            "name": "Identifier",
                            "src": "1066:11:6"
                          }
                        ],
                        "id": 7719,
                        "name": "FunctionCall",
                        "src": "1051:27:6"
                      }
                    ],
                    "id": 7720,
                    "name": "ExpressionStatement",
                    "src": "1051:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7702,
                              "type": "function (address,uint256)",
                              "value": "NewSolution"
                            },
                            "id": 7721,
                            "name": "Identifier",
                            "src": "1093:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10304,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7722,
                                "name": "Identifier",
                                "src": "1105:3:6"
                              }
                            ],
                            "id": 7723,
                            "name": "MemberAccess",
                            "src": "1105:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7692,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7724,
                                "name": "Identifier",
                                "src": "1117:9:6"
                              }
                            ],
                            "id": 7725,
                            "name": "MemberAccess",
                            "src": "1117:16:6"
                          }
                        ],
                        "id": 7726,
                        "name": "FunctionCall",
                        "src": "1093:41:6"
                      }
                    ],
                    "id": 7727,
                    "name": "EmitStatement",
                    "src": "1088:46:6"
                  }
                ],
                "id": 7728,
                "name": "Block",
                "src": "968:173:6"
              }
            ],
            "id": 7729,
            "name": "FunctionDefinition",
            "src": "923:218:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNFT",
              "scope": 7811,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7730,
                        "name": "ElementaryTypeName",
                        "src": "1385:7:6"
                      }
                    ],
                    "id": 7731,
                    "name": "VariableDeclaration",
                    "src": "1385:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "id",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7732,
                        "name": "ElementaryTypeName",
                        "src": "1400:4:6"
                      }
                    ],
                    "id": 7733,
                    "name": "VariableDeclaration",
                    "src": "1400:7:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 9963,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7734,
                        "name": "UserDefinedTypeName",
                        "src": "1409:5:6"
                      }
                    ],
                    "id": 7735,
                    "name": "VariableDeclaration",
                    "src": "1409:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7736,
                            "name": "ElementaryTypeName",
                            "src": "1429:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7737,
                            "name": "Literal",
                            "src": "1434:1:6"
                          }
                        ],
                        "id": 7738,
                        "name": "ArrayTypeName",
                        "src": "1429:7:6"
                      }
                    ],
                    "id": 7739,
                    "name": "VariableDeclaration",
                    "src": "1429:20:6"
                  }
                ],
                "id": 7740,
                "name": "ParameterList",
                "src": "1384:66:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7741,
                        "name": "ElementaryTypeName",
                        "src": "1468:4:6"
                      }
                    ],
                    "id": 7742,
                    "name": "VariableDeclaration",
                    "src": "1468:4:6"
                  }
                ],
                "id": 7743,
                "name": "ParameterList",
                "src": "1466:8:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_eb46b51557dbc431070b53ffe96993590c943f1d5c0d20b1d08d2bf504d4b9ba",
                                  "typeString": "literal_string \"Sorry, you need to provide proof of ownership.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10307,
                                10308
                              ],
                              "referencedDeclaration": 10308,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7744,
                            "name": "Identifier",
                            "src": "1485:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$9963_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10288,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7745,
                                "name": "Identifier",
                                "src": "1493:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7735,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7746,
                                "name": "Identifier",
                                "src": "1502:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7739,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7747,
                                "name": "Identifier",
                                "src": "1509:5:6"
                              }
                            ],
                            "id": 7748,
                            "name": "FunctionCall",
                            "src": "1493:22:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f7272792c20796f75206e65656420746f2070726f766964652070726f6f66206f66206f776e6572736869702e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Sorry, you need to provide proof of ownership.\"",
                              "value": "Sorry, you need to provide proof of ownership."
                            },
                            "id": 7749,
                            "name": "Literal",
                            "src": "1517:48:6"
                          }
                        ],
                        "id": 7750,
                        "name": "FunctionCall",
                        "src": "1485:81:6"
                      }
                    ],
                    "id": 7751,
                    "name": "ExpressionStatement",
                    "src": "1485:81:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7753
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solutionHash",
                          "scope": 7809,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7752,
                            "name": "ElementaryTypeName",
                            "src": "1672:7:6"
                          }
                        ],
                        "id": 7753,
                        "name": "VariableDeclaration",
                        "src": "1672:20:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10298,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7754,
                            "name": "Identifier",
                            "src": "1695:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10291,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7755,
                                    "name": "Identifier",
                                    "src": "1705:3:6"
                                  }
                                ],
                                "id": 7756,
                                "name": "MemberAccess",
                                "src": "1705:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7739,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7757,
                                "name": "Identifier",
                                "src": "1722:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 9307,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 9958,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7758,
                                        "name": "Identifier",
                                        "src": "1729:5:6"
                                      }
                                    ],
                                    "id": 7759,
                                    "name": "MemberAccess",
                                    "src": "1729:7:6"
                                  }
                                ],
                                "id": 7760,
                                "name": "MemberAccess",
                                "src": "1729:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 9309,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 9958,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7761,
                                        "name": "Identifier",
                                        "src": "1740:5:6"
                                      }
                                    ],
                                    "id": 7762,
                                    "name": "MemberAccess",
                                    "src": "1740:7:6"
                                  }
                                ],
                                "id": 7763,
                                "name": "MemberAccess",
                                "src": "1740:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 9314,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 9960,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7764,
                                        "name": "Identifier",
                                        "src": "1751:5:6"
                                      }
                                    ],
                                    "id": 7765,
                                    "name": "MemberAccess",
                                    "src": "1751:7:6"
                                  }
                                ],
                                "id": 7766,
                                "name": "MemberAccess",
                                "src": "1751:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 9318,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 9960,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7767,
                                        "name": "Identifier",
                                        "src": "1762:5:6"
                                      }
                                    ],
                                    "id": 7768,
                                    "name": "MemberAccess",
                                    "src": "1762:7:6"
                                  }
                                ],
                                "id": 7769,
                                "name": "MemberAccess",
                                "src": "1762:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 9307,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 9962,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7770,
                                        "name": "Identifier",
                                        "src": "1773:5:6"
                                      }
                                    ],
                                    "id": 7771,
                                    "name": "MemberAccess",
                                    "src": "1773:7:6"
                                  }
                                ],
                                "id": 7772,
                                "name": "MemberAccess",
                                "src": "1773:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 9309,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 9962,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7773,
                                        "name": "Identifier",
                                        "src": "1784:5:6"
                                      }
                                    ],
                                    "id": 7774,
                                    "name": "MemberAccess",
                                    "src": "1784:7:6"
                                  }
                                ],
                                "id": 7775,
                                "name": "MemberAccess",
                                "src": "1784:9:6"
                              }
                            ],
                            "id": 7776,
                            "name": "FunctionCall",
                            "src": "1705:89:6"
                          }
                        ],
                        "id": 7777,
                        "name": "FunctionCall",
                        "src": "1695:100:6"
                      }
                    ],
                    "id": 7778,
                    "name": "VariableDeclarationStatement",
                    "src": "1672:123:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ea97c8cd92228de2775172b75918dfaf5c02be63f5a0f16aabc64ceb0f4a74b7",
                                  "typeString": "literal_string \"Sorry, not a unique solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10307,
                                10308
                              ],
                              "referencedDeclaration": 10308,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7779,
                            "name": "Identifier",
                            "src": "1814:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7696,
                                      "type": "mapping(bytes32 => address)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7780,
                                    "name": "Identifier",
                                    "src": "1822:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7753,
                                      "type": "bytes32",
                                      "value": "solutionHash"
                                    },
                                    "id": 7781,
                                    "name": "Identifier",
                                    "src": "1838:12:6"
                                  }
                                ],
                                "id": 7782,
                                "name": "IndexAccess",
                                "src": "1822:29:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7783,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1855:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7784,
                                    "name": "Literal",
                                    "src": "1863:1:6"
                                  }
                                ],
                                "id": 7785,
                                "name": "FunctionCall",
                                "src": "1855:10:6"
                              }
                            ],
                            "id": 7786,
                            "name": "BinaryOperation",
                            "src": "1822:43:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f7272792c206e6f74206120756e6971756520736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Sorry, not a unique solution\"",
                              "value": "Sorry, not a unique solution"
                            },
                            "id": 7787,
                            "name": "Literal",
                            "src": "1867:30:6"
                          }
                        ],
                        "id": 7788,
                        "name": "FunctionCall",
                        "src": "1814:84:6"
                      }
                    ],
                    "id": 7789,
                    "name": "ExpressionStatement",
                    "src": "1814:84:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7696,
                                  "type": "mapping(bytes32 => address)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7790,
                                "name": "Identifier",
                                "src": "1908:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7753,
                                  "type": "bytes32",
                                  "value": "solutionHash"
                                },
                                "id": 7791,
                                "name": "Identifier",
                                "src": "1924:12:6"
                              }
                            ],
                            "id": 7792,
                            "name": "IndexAccess",
                            "src": "1908:29:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7731,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7793,
                            "name": "Identifier",
                            "src": "1940:5:6"
                          }
                        ],
                        "id": 7794,
                        "name": "Assignment",
                        "src": "1908:37:6"
                      }
                    ],
                    "id": 7795,
                    "name": "ExpressionStatement",
                    "src": "1908:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7729,
                              "type": "function (address)",
                              "value": "addSolution"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1956:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7731,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7797,
                            "name": "Identifier",
                            "src": "1968:5:6"
                          }
                        ],
                        "id": 7798,
                        "name": "FunctionCall",
                        "src": "1956:18:6"
                      }
                    ],
                    "id": 7799,
                    "name": "ExpressionStatement",
                    "src": "1956:18:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7801
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minted",
                          "scope": 7809,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7800,
                            "name": "ElementaryTypeName",
                            "src": "1992:4:6"
                          }
                        ],
                        "id": 7801,
                        "name": "VariableDeclaration",
                        "src": "1992:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1406,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7802,
                            "name": "Identifier",
                            "src": "2006:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7731,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7803,
                            "name": "Identifier",
                            "src": "2011:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7733,
                              "type": "uint256",
                              "value": "id"
                            },
                            "id": 7804,
                            "name": "Identifier",
                            "src": "2018:2:6"
                          }
                        ],
                        "id": 7805,
                        "name": "FunctionCall",
                        "src": "2006:15:6"
                      }
                    ],
                    "id": 7806,
                    "name": "VariableDeclarationStatement",
                    "src": "1992:29:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7743
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 7801,
                          "type": "bool",
                          "value": "minted"
                        },
                        "id": 7807,
                        "name": "Identifier",
                        "src": "2039:6:6"
                      }
                    ],
                    "id": 7808,
                    "name": "Return",
                    "src": "2032:13:6"
                  }
                ],
                "id": 7809,
                "name": "Block",
                "src": "1475:577:6"
              }
            ],
            "id": 7810,
            "name": "FunctionDefinition",
            "src": "1368:684:6"
          }
        ],
        "id": 7811,
        "name": "ContractDefinition",
        "src": "334:1720:6"
      }
    ],
    "id": 7812,
    "name": "SourceUnit",
    "src": "0:2092:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x75668a51d8d955cfed0b332555d14bf4fdffc606a9d49484217c917011e25c79": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "NewSolution",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x9422424b175dda897495a07b091ef74a3ef715cf6d866fc972954c1c7f459304": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "pausedState",
              "type": "bool"
            }
          ],
          "name": "Pause",
          "type": "event"
        },
        "0x9d410ac948b4b33520548229283477f4ef024954d67056116e4b39970bde3633": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "HasNewOwner",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1a635eBfbf9b8BEa14a823C4B35c2B9c634faC64",
      "transactionHash": "0x2e1ae78e4b805316288fab2211837c60c7cbf7c34a56372593f1eb83e0509d2c"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xCe417753e2de8a92CCE4Cb92FB7d7be066b9a43C",
      "transactionHash": "0x7d362fd184d448142e73b097f834e649afd5192f790824a4b93511f48521838a"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-10T21:23:58.786Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}